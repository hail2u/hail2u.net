# SVGOでSVGをインライン化

<p>SVGをインラインでHTMLに含める場合、SVGOを通した方が良い。HTMLファイルのサイズへ与える影響が大きいからだ。しかしデフォルトの設定だと、色々消えたり消えなかったりするのでそこそこ設定が必要になる。特に<code>img</code>要素の<code>alt</code>属性に近い<code>title</code>要素の<code>id</code>属性とそれを参照する<code>aria-labelledby</code>属性は残さなければならない。</p>

<p>SVGOの設定はYAMLで書き、CLIに<code>--config</code>オプションでそのファイル名を渡して実行する。</p>

<pre><samp>$ <kbd>svgo --config=.svgo.yml -o - src/img/logo.svg</kbd></samp>
</pre>

<p>YAMLでの設定は以下のようにした。</p>

<pre><code class="language-yaml">plugins:
  - cleanupIDs: false
  - removeUnknownsAndDefaults:
      unknownAttrs: false
  - removeXMLNS: true
</code></pre>

<p>SVGの要素から参照されていない<code>id</code>属性を消す機能と未知の属性を消す機能を無効にすることで、うまくいくようにする。併せてHTMLへインライン化する際には<code>xmlns</code>属性は不要なので、それを消す機能を有効にしておく。IllustratorやInkscape、Sketchなどが埋め込んでしまう様々な属性が残ってしまうので、事前にそこそこ処理しておく必要がある。</p>

<hr>

<p>ということでロゴやソーシャル・アイコンがインラインSVGになった。色の制御をCSSに集約できて楽になった。まだ自前でCLIを叩いてインライン化しているので、<code>img</code>要素でSVGファイルを参照していたらインライン化してしまうなど機械化したい。</p>

<p>また<code>aria-*</code>属性残す機能はみなSVGOのコアに欲しい気がするので、<code>data-*</code>属性と同じように設定で残せるようにしたい。</p>
