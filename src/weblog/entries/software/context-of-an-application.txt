アプリケーションが使われる文脈

<p><a href="http://thomasbyttebier.be/blog/the-best-icon-is-a-text-label">The best icon is a text label</a>という記事を読んだ。記事のタイトルからは、とにかく変なアイコンをやめて文字列にしろ！という風に感じられるが、実際には継続的なアプリケーションの利用によるユーザーの学習を期待せず、アプリケーションが使われる文脈を重視して選択しろという話のようだ。別の言い方をすれば、アイコンか文字列かではなく文脈だ、という話になるだろう。</p>

<p>パッと見では失敗していそうなアイコンだが、うまく機能している例としてTweetbotやTumblrのiOSアプリが例に挙げられている。これらはそれぞれTwitterのユーザーであることやTumblrのユーザーであることが前提となっているので、多少妙なアイコン、例えばTweetbotの@アイコンやTumblrのhi!アイコンなどもちゃんとユーザが理解でき、機能するということになる。</p>

<p>反対に機能していない例としてApple mailやInstagramのiOSアプリを例に挙げている。Apple mailでは新しくメールを書こうとした時に、封筒の形をしたアイコンと紙に鉛筆が重なったアイコンのどちらをクリックすべきかはっきりわからない。InstagramのiOSアプリでは友人に直接画像を送りつけたい時になぜか受信トレイのアイコンをクリックする必要がある。前者は学習難易度が高く(覚えても忘れる)、後者は学習することすら出来ない(機能へたどり着くことすら出来ない)可能性が高い。</p>

<p>難しいのはオリジンたるそういった文脈を創成するアプリケーションを作る時だ。文脈を参照する側ではなく作り出す側なので、そのアイコンはユーザーの学習を必須とするものになる。Facebookの新しいiOSアプリではハンバーガー・ボタンを排除し、ラベル付きでアイコンを表示することにより、アイコンの持つ意味合いを確定し、文脈の創成を実現していると言えそう。</p>

<hr>

<p>ハンバーガー・ボタンも含め、アイコンは描画領域の節約に多いに役立つ。しかしアイコン化で失われるものもまた多い。アプリケーションはもとよりウェブサイトでも、その利用される文脈を考慮して適切に利用していきたい。</p>
