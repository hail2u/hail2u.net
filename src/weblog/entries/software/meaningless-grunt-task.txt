つまらないGruntタスク

<p><code>Gruntfile.js</code>をサッと開く手段として<a href="/pub/grunt-task-edit.js"><code>edit</code>という簡単なタスク</a>を勢いで書いたんだけど、無意味でつまらないGruntタスクだった。Gruntには様々なタスクがあり、自分でもNode.jsを駆使して自由に書けるので、色々やりたくなる。けれどもグッとこらえて、ワークフローにおける定型作業の自動化に絞った方が、ワークフローと開発環境、そして<code>Gruntfile.js</code>に優しい。</p>

<p><a href="https://github.com/gruntjs/grunt-contrib-watch">grunt-contrib-watch</a>を使ったSassの自動コンパイルやLiveReloadのタスクは確かに便利なんだけど、開発から公開までのワークフローの段階として必須というわけじゃない。これらはタスクというよりも環境なので、別に自分好みの環境を作った方が集中できるし、好みでない環境を押し付けずに(そして押し付けられずに)済む。</p>

<p>また、Gruntでなんでもやることに慣れてしまうと、設定されてるしそれで良いかみたいな感じになっちゃう。例えば<a href="https://github.com/gruntjs/grunt-contrib-jshint">grunt-contrib-jshint</a>を使ってJSHintにかけるタスクは大体において最後に行う確認として使われるわけだけど、JSHint自体は開発中にももちろん必要。それぞれにおいて重視すべきチェックポイントは違うので、単純に流用するのはまずい。タスクの設定でそれぞれ分けてどうにかするのはひとつの手ではあるけど、プル・リクエスト用には厳しく、リリース用には少しゆるくチェックしているなどということもあるだろうしとかで、設定はどんどん増えていってしまう。</p>

<p>こういった他のもので開発者ごとに好みにできることだったり、何かしらの流用でとりあえずGruntで実行できるようにしたというだけだったりするようなGruntタスクは<em>つまらない</em>。開発のやり方を強いられて<em>つまらない</em>だったり、Gruntでやる意味がわからなくて<em>つまらない</em>だったり、設定が面倒くさくて<em>つまらない</em>だったり。</p>

<p>様々なことを色々なタイミングで行う<em>便利</em>な<code>Gruntfile.js</code>だと、行うタスクに対して無駄が多いものになりやすい。つまらないタスクを使わないようにすると、設定はシンプルに書けることが多く、テンプレートを使った参照を使えば繰り返し書く必要もあまりない。インストールするGruntタスクを特定の時点、例えばデプロイ前の整理やプロジェクトの下準備というようなワークフローの出入り口に使う自動化だけに絞ると、簡潔で無駄が少なく、把握しやすい<code>Gruntfile.js</code>に自然となってくれる。</p>

<hr>

<p>これは良くてこれはダメと簡単に評価できる明確な基準があれば良いんだけど、そこまでははっきりしていない。タスクの設定の複雑さや実行速度、規模の大きさなどといった量的な側面から評価するよりも、そのタスクが<em>主に実行されると想定されているタイミング</em>というワークフローにおける時系列的な面から評価する方が良さそう。</p>
