SVGO

<p><a href="https://github.com/svg/svgo">SVGO</a>はSVGに不要なホワイトスペースの削除に留まらない最適化を行ってくれるステキなソフトウェア。ちょっと前までなかなか挙動不審だったので、利用を避けていたんだけどv0.3.7では安定している感じなのでまた使い始めた。デフォルトでは入力ファイルを上書きしちゃうのでバックアップを取るように心がけたい。</p>

<p>SVGOは大体において本当に素晴らしい効果を発揮してくれる。Data URIを使ってCSSに埋め込む時のようにファイルサイズがダイレクトに響いてくるケースには積極的に利用すると良い。デフォルトでは<code>viewBox</code>属性消えちゃうとかアレッ？と思うところもあるけど、気になるなら残すように設定もできる。ドラッグ・アンド・ドロップでまとめてSVGOに通してくれる<a href="https://github.com/svg/svgo-gui">SVGO GUI</a>とかもあるのでそんなに使い方は難しくない。</p>

<pre><samp>$ <kbd>svgo -i test.svg -o - --datauri=base64</kbd>
</samp></pre>

<p>CLIで使う場合もこれでSTDOUTにBase64なData URIで吐けて便利。URLエンコードでも吐けるので、少しでもサイズを減らしたい人は<code>--datauri=enc</code>にすると良い。</p>

<p>普通は<a href="https://github.com/sindresorhus/grunt-svgmin">Gruntタスク</a>でもちろん良いんだけど、Vimで以下のようなコマンドと関数を<code>.vimrc</code>で定義すると、CSSとかに書いたSVGファイルへのパスにカーソルを載せて<code>:SVGO</code>するとData URIに置き換わる。</p>

<pre><code class="language-vim">command! SVGO :call &lt;SID&gt;OptimizeSVG()

function! s:OptimizeSVG()
  let cfile = expand('&lt;cfile&gt;')
  let datauri = system('svgo -i ' . cfile . ' -o - --datauri=base64')
  let datauri = substitute(datauri, '\n$', '', '')
  call setreg('d', substitute(getline('.'), cfile, datauri, ''))
  normal! V"dp
endfunction
</code></pre>

<p>SVGOのSTDOUTに吐くオプションでは<a href="https://github.com/svg/svgo/blob/v0.3.7/lib/svgo/coa.js#L223">最後に<code>\n</code>が付く</a>ようになってるので消してる。レジスター使っちゃうのは許してくれ。</p>

<p>ちょっと前まで挙動不審だった……というのは時々SVGをぶっ壊してくれたという話。現在の最新版であるv0.3.7では今のところ壊れたりしたことがないし、開発も活発なのでバックアップ取るの忘れないようにしとけばもう大丈夫だと思う。SVGO GUIの配布バイナリではまだ古いバージョンを使っているようで、以下のデモのようにSVGを壊すことがあるので注意が必要。</p>

<p class="seealso">View Demo: <a href="/pub/test/473.html">Old Version of SVGO Breaks SVG</a></p>

<hr>

<p>SVGO GUIで使われてる<a href="https://github.com/rogerwang/node-webkit">Node-WebKit</a>楽しそうだなー。</p>
