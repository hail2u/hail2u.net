git subtree split --branch

<p>リポジトリの取り込みに<a href="/blog/software/git-subtree-training.html">subtree</a>を使い始めて、機能的には満足の行くものだと感じた。けれども<code>subtree push</code>する時にどんどん遅くなっていく。これは全履歴をチェックし必要ならば履歴を作り直すからのようだ。<code>subtree split</code>を使うと特定のコミットをブランチとして切り出せるので、これを使うと作り直しの起点となるコミットを前進させられる……と教えてもらったがダメだった。</p>

<pre><samp>$ <kbd>git remote add -f subtree_origin https://example.com/bob/foo.git</kbd>
$ <kbd>git subtree add --prefix=foo/ --squash subtree_origin master</kbd>
...Commit some changes...
$ <kbd>git push origin master</kbd>
$ <kbd>git subtree split --prefix=foo/ --branch=subtree_branch</kbd>
$ <kbd>git push subtree_origin subtree_branch:master</kbd>
</samp></pre>

<p><code>origin</code>へ<code>push</code>するまでは通常通りで、<code>subtree push</code>する場合とも同じ。その後、<code>subtree split</code>で<code>subtree_branch</code>として切り出し、そのブランチを<code>subtree_origin</code>の<code>master</code>へ<code>push</code>する。<code>subtree_branch</code>は作業ブランチではなく切り出しポイントを記録するためだけのものということになる。</p>

<p>これで履歴のチェックは最低限で済むはずだったのだが、実際にはうまくいかず、毎回履歴を作り直すままだった。この<code>subtree push</code>がどんどん遅くなっていく問題の解決方法が見つからないので、subtreeの利用はギブアップした。</p>

<hr>

<p>この辺りはどうもsubtreeの最大の問題であるようで、もっと単純なアプローチの<a href="http://www.mos6581.org/git_subtree_alternative">githooksを利用したもの</a>や<a href="https://github.com/ingydotnet/git-subrepo">submoduleを発展させた別解</a>が考えられたりしているようだ。どちらもgit-subrepoという名称。前者はコミットを調べて、特定のサブディレクトリへのコミットだったらそのコミットをコピーして別ブランチへコミットする、というややこしいい作業を自動化するもの。後者はsubmoduleを発展させて、リモートの変更の<code>pull</code>とローカルでの変更の<code>push</code>を簡単に行えるようにしているものらしい。</p>

<p>前者は履歴が……で、後者は全体像が把握できなかったのでまだ試していない。</p>
