ConsoleZ

<p>開発の止まったConsole2の後継っぽい<a href="https://github.com/cbucher/console">ConsoleZ</a>を試している。シェルでずっと作業するわけじゃないので<a href="http://ckw-mod.github.io/">ckw-mod</a>で不満はなくて、Console2には乗り換える意味はなさそうだったんだけど、ConsoleZではウィンドウの再利用が行え、他のアプリケーションから新しいタブを開くということが可能になったのでちょっと良い。</p>

<p>ウィンドウの再利用はSettings→BehaviorにあるInstancesのチェックを外すと、二重起動で新しいタブが開かれるようになる。通常はこれで良いはず。しかしこれだと常にひとつのウィンドウしか開けなくなるので、タブが切り離しできない現状だとちょっと使いづらいこともある。なのでコマンドライン・オプションから制御する方が良い。オプションは<code>-reuse</code>。</p>

<pre><kbd>Console.exe -reuse -d C:\Users\Taroh</kbd>
</pre>

<p>このようにすれば既存のConsoleZのウィンドウに新しいタブが追加され、指定ディレクトリがコマンド・プロンプトで開かれる。<code>-t</code>オプションでタブ設定名を併せて指定すればBashとかでももちろん開くことができる。</p>

<hr>

<p>Vimから簡単に呼べるように設定も書いた。</p>

<pre><code class="language-vim">if has(&#39;win32&#39;)
  &quot; Reuse existing ConsoleZ instance
  function! s:ReuseConsoleZ(...)
    let tab = &amp;shell

    if a:0 != 0
      let tab = a:1
    endif

    execute &#39;silent !start Console.exe -reuse -t &#39; . tab .&#39; -d &#39; . expand(&#39;%:p:h&#39;)
  endfunction

  &quot; Complete ConsoleZ tab
  function! s:ConsoleZTabComplete(A, L, P)
    let commands = [&#39;cmd&#39;, &#39;bash&#39;, &#39;ps&#39;]
    let matches = []

    for cmd in commands
      if cmd =~? &#39;^&#39; . a:A
        call add(matches, cmd)
      endif
    endfor

    return matches
  endfunction

  &quot; ConsoleZ: Open ConsoleZ
  command! -nargs=* -complete=customlist,&lt;SID&gt;ConsoleZTabComplete ConsoleZ call &lt;SID&gt;ReuseConsoleZ(&lt;f-args&gt;)
endif
</code></pre>

<p>デフォルトはVimのシェル設定から引っ張るようにして、追加でタブ設定を補完できるようにしておき、たまに必要になるPowerShellを起動しやすくしたりとかそんな感じ。あらかじめ<code>-reuse</code>オプションでConsoleZを立ち上げておく必要はある。</p>

<hr>

<p>ウィンドウの再利用に価値を感じるのならオススメとは言えそうだけど、描画パフォーマンスは相変わらず遅く、かっこ良くしたと主張しているタブは非常にダサい(特に消せない横スクロールボタン)。つい先程実装されたIMEのインライン化はトピックではあるけど、必要性には少し疑問が……。</p>
