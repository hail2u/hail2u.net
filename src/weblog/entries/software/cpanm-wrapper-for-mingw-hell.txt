いっぱいMinGWがある環境におけるStrawberry Perl向けcpanmのラッパー

<p><a href="http://www.mingw.org/">MinGW</a>に加えて<a href="http://msysgit.github.io/">Git for Windows</a>、<a href="http://strawberryperl.com/">Strawberry Perl</a>、DevKit付きの<a href="http://rubyinstaller.org/">RubyInstaller</a>と、MinGWがいっぱい入ってる。こういう環境だとStrawberry Perlのセットアップで<code>PATH</code>環境変数に<code>ld.exe</code>とかがあるフォルダーへのパスを追加される(または追加する必要がある)のがコンフリクトの原因になってとても厄介。どうせもう<code>cpanm</code>しか使わないので、そのラッパー書いてRubyInstallerのDevKitとRubyGemの挙動に似たような感じにごまかすことにしたメモ。</p>

<p>RubyInstallerのDevKitとRubyGemはうまく出来ていて、DevKitをインストールするとRubyGemでインストール系のコマンドを使う時にだけ<a href="https://github.com/oneclick/rubyinstaller/blob/master/resources/devkit/dk.rb.erb#L61-L75"><code>PATH</code>にDevKitのフォルダーを追加してくれるようになっている</a>(んだと思う)。優先して<code>PATH</code>に追加されるので、かなりコンフリクトに強い。というかMinGWは使うときにだけ<code>PATH</code>に追加するのが王道だと思うので、こっちの方が素直な利用法な気がする。</p>

<pre><code class="language-bat">@echo off

echo Temporary enhancing PATH to include build tools...
cmd /c set PATH=C:\strawberry\c\bin;%PATH% &amp;&amp; C:\strawberry\perl\bin\cpanm.bat %*</code></pre>

<p>これを<code>cpanmw.bat</code>などとしてパスの通った所に置いておくだけ。Windowsのパス管理の仕様上、<code>cpanm.bat</code>としてそれを使わせようとするのは茨の道なので止めておいた方が良い。</p>

<pre><samp>C:\&gt; <kbd>cpanmw JSON::XS</kbd>
</samp></pre>

<p>全ての引数をそのまま渡すので<code>cpanm</code>コマンドと使い方は同じ。</p>

<p>このままだと例えばLWP::UserAgentでhttpsにアクセスする場合とかにDLLがなくて怒られるので、<code>dmake.exe</code>や<code>ld.exe</code>とかがあるフォルダーにあるDLLファイルを<code>perl.exe</code>があるフォルダーにコピーするという荒業でごまかしている。他にも不具合ありそうだけど、特定のモジュールがうまく動かないか<code>cpanm</code>でのユーザー領域へのモジュールのインストールが失敗するくらいだと思うので、あまり環境がぶっ壊れる感じにはならないんじゃないかと思う。</p>
