<h1>pre要素3行 = p要素2行</h1>

<p><code>pre</code>要素の行間をどのように調節するのがいいのかということをしばらく考えていた。今までは本文の行間よりも少し狭めるというだけのものだったが、もう少し論理的なものにしたいと、いろいろ考えている。まずは少しフォント・サイズを落とした上で本文とある程度揃うように、具体的には<code>p</code>要素の2行分の高さとちょうど揃うように<code>pre</code>要素の3行分を調節してみることにした。</p>

<pre><code class="language-scss">$line-height-root: 1.7;

:root {
  line-height: $line-height-root;
}

pre {
  $r: 0.8;

  font-size: percentage($r);
  line-height: ($line-height-root * 2 / 3 / $r); // 1.7 * 2 / 3 / 0.8 = 1.41667
}
</code></pre>

<p><code>p</code>要素の行数である<code>2</code>とそれに対応する<code>pre</code>要素の行数である<code>3</code>、そしてフォントサイズを制御する<code>0.8</code>を使って計算している。<code>calc()</code>でも良いが、特に何かユーザー環境に依存するわけではないため<code>calc()</code>である必要もない。素直に計算しておいた方がCSSを効率的に解釈してもらえるはずだ。</p>

<figure class="hang">
<a href="/images/blog/6-lines-of-p-and-9-lines-of-pre.png"><img alt="p要素6行とpre要素9行の比較" height="196" src="/images/blog/6-lines-of-p-and-9-lines-of-pre.png" width="722"></a>
</figure>

<p>実際にこのウェブサイトではこのように左右に<code>p</code>要素と<code>pre</code>要素が並ぶことはないが、これはわかりやすいように並べて比較した図だ。<code>p</code>要素が6行あるが、<code>pre</code>要素の9行分とほぼ（小数点の丸めの関係上、<code>1px</code>ほどずれる）一致していることがわかるだろう。</p>

<hr>

<p>調節してみた結果、CSS的にはすっきりしたものの、実際に読みやすいかどうかには疑問が残った。何かと何かを揃えるという発想ではなく、空白をうまく制御する、つまりこの場合は本文のフォントと<code>pre</code>要素に使うフォントのx-heightに注目して行間を調節した方が優れた解になりうるのかもしれない。</p>
