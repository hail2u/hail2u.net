<h1>RawGitを利用したレスポンシブ・コード</h1>

<figure class="fill">
  <a href="/images/blog/rawgit-and-responsive-code.png"><img alt="RawGit" height="627" src="/images/blog/rawgit-and-responsive-code.png" width="1200"></a>
</figure>

<p>以前に書いた<a href="/blog/webdesign/responsive-code.html">レスポンシブ・コード</a>は、取り込みたいコードを同じドメイン配下に置いておく必要があった。多くの場合、そういった断片のコードは<a href="https://gist.github.com/">Gist</a>なりに置いたものを取り込みたいはずなので、その点でかなりイマイチなものだった。先ごろ知った<a href="http://andrekoenig.info/codegrabber/">CodeGrabber</a>というコード貼り付けライブラリでは、<a href="https://rawgit.com/">RawGit</a>のCDN版が<code>Access-Control-Origin: *</code>なことを利用してドメイン越えをしていた。レスポンシブ・コードでもこれを利用すると良さそうだ。</p>

<p><a href="/pub/test/497.html">レスポンシブ・コードのJavaScriptライブラリ</a>の実装は変える必要なく、リンクとして参照するURLをRawGit経由でGistやGitHubのファイルにするだけで良さそう。</p>

<p>Gistが提供する貼り付けウィジェットがゴツすぎることとGitHubのコードは貼り付ける術が用意されていないことから、CodeGrabberの目の付け所はすごく良い。しかし<code>pre</code>要素への<code>data-src</code>属性を使って行うという実装は良い手段とは思えない。何かしらの事情でうまく動かなかった時にHTMLとして破綻するし、ドキュメントとしても破綻する可能性が高い。まずは<code>a</code>要素を使ってリンクとして参照しておいて、必要に応じて展開するという方が良いはずだ。</p>

<hr>

<p>RawGitのCDN版は便利といえば確かにそうなんだけど、<a href="https://pages.github.com/">GitHub Pages</a>がCDN経由になった今となってはイマイチ……というイメージだった。しかしこの<code>Access-Control-Origin: *</code>であるという点は結構なメリットだなと見直した。GitHub Pagesでウェブフォントのホスティングもできるかも！とか考えてた（り無責任にも他人に薦めてた）けど、Firefoxでウェブフォントはドメイン越えできないので、RawGitのCDN版は有力な解ではありそう。</p>

<p>ただしドメインがアレでアレしたら、影響範囲が広くて悲惨そうだなとも思う。JavaScriptファイルが変なものに差し替わったり、ウェブフォントが全部変なグリフに変わったり。チキンなので動作サンプルを載せるのはやめておいた。</p>
