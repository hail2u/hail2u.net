<h1>定義ごとにまとめたルールセット</h1>

<figure class="fill">
  <a href="http://meiert.com/en/blog/20141009/css-dry-and-optimization/"><img alt="Declaration Just Once" height="627" src="/images/blog/declaration-just-once.png" width="1200"></a>
</figure>

<p><a href="http://meiert.com/en/blog/20141009/css-dry-and-optimization/">CSS, DRY, and Code Optimization</a>という記事を読んだ。この記事ではメンテナンス性を重視したCSSの最適化について書かれている。いわゆる自然な書き方、つまりHTMLの構造をストレートに反映させたルールセットごとに定義（プロパティーと値のセット）を書いていくよりも、定義ごとにルールセットを作成してそれにセレクターを複数割り当てていく方が優れているという。</p>

<p>具体的なまとめ方は<a href="https://developers.google.com/speed/articles/optimizing-css">CSS: Using every declaration just once</a>というGoogleのドキュメントに詳しい。タイトルの通り、同じ定義が二度と出てこないように書いていくようだ。</p>

<p>サイズ的なメリットはともかくとして、メンテナンス性という面では確かに良さそうではある。CSSにおける保守は、定義の修正と追加が大半を占めるので、定義がユニークであるとどこをどう直せば良いのかすぐにわかるだろう。</p>

<p>デメリットとしては自然でない書き方であることもそうだが、メンテナンス性においても若干の不安はある。クラス名のリネームはぎりぎり何とかなるだろうが、既存のルールセットと多くを共有するような新たな要素を追加した場合、その要素を表現するセレクターを各ルールセットに追加していく必要がある。これはかなりの注意を必要とする作業な上、機械化もしづらい。</p>

<hr>

<p>印象としては、修正や更新には強いものの、追加や削除に弱く、スケールしないんじゃないかなというものだ。この記事の著者であるJens Meiertは<a href="http://meiert.com/en/blog/20091118/useful-universal-usable-unobtrusive/">コンパクトなCSSを好むような人</a>だと思うので、そういう視点でのものでもありそうだ。小規模のウェブサイトには向いた書き方なのかもしれない。</p>
