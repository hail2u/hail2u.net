Abbread

<p><abbr title="HyperText Markup Language">HTML</abbr>の<code>abbr</code>要素に指定された<code>title</code>属性を、<code>title</code>属性が省略された他の<code>abbr</code>要素へばらまく小さなスクリプトを必要に迫られて書いていた。名前はabbrとspreadを混ぜて<a href="https://www.npmjs.com/package/@hail2u/abbread">Abbread</a>とした。</p>

<p><code>abbr</code>要素を使う場合、最初のそれだけに<code>title</code>属性を付けるなどということをよくやる。仕様によるとこのあたりの書き方については以下の一文で触れられている。</p>

<figure>
<blockquote>
<p>Providing an expansion in a <code>title</code> attribute once will not necessarily cause other <code>abbr</code> elements in the same document with the same contents but without a <code>title</code> attribute to behave as if they had the same expansion. （参考訳: <code>title</code>属性を使って完全表記を一度提供したとしても、同じ文書内の同じ内容を持つ<code>abbr</code>要素が<code>title</code>属性を持たない場合にあたかも同じ完全表記を持つように振る舞ってくれるとは限らない。）</p>
</blockquote>
<figcaption>– <a href="https://html.spec.whatwg.org/multipage/semantics.html#the-abbr-element"><cite>4.5.9 The <code>abbr</code> element</cite></a></figcaption>
</figure>

<p>つまり、最初の<code>abbr</code>要素だけに<code>title</code>属性を書くといった省略した書き方は推奨されていない。<q>Every <code>abbr</code> element is independent</q>とも続けて書いてある通り、それぞれは独立していると考えるべきなわけだ。</p>

<p>とはいうもののいちいち書いていたら頭がおかしくなることは確実だ。だからといって<code>abbr</code>要素を使わないという選択も微妙なので、ブラウザーに頑張ってもらうだけで良いことにした。</p>

<p>この小さなライブラリーをウェブページに読み込むと、</p>

<pre><code class="language-html">&lt;p&gt;&lt;abbr title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/abbr&gt; is dead, long live &lt;abbr&gt;HTML&lt;/abbr&gt;!&lt;/p&gt;
</code></pre>

<p>が、</p>

<pre><code class="language-html">&lt;p&gt;&lt;abbr title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/abbr&gt; is dead, long live &lt;abbr title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/abbr&gt;!&lt;/p&gt;
</code></pre>

<p>となる。</p>

<hr>

<p>こういった<code>title</code>要素をばらまくというだけでなく、もう一歩踏み込んだものがブラウザーの機能としてあってもよさそうだ、という考えが頭をかすめた。<code>abbr</code>や<code>dfn</code>要素などの既存の<abbr>HTML</abbr>マークアップを使って、そのウェブページ内でのみ機能する小さな辞書機能を構築できたりすると、技術文書などでは非常に有用だろう。</p>

<p>ブラウザー・アプリや拡張でやると、そういった技術文書のウェブサイトを閲覧する際に特定のアプリや拡張が必要になってしまう（かもしれない）ので、別の問題が発生してしまいそうだ。とはいうものの日々必要とされる機能であるとも思えない。やはり必要になったら自分たちででっち上げるのが無難そうだ。</p>
