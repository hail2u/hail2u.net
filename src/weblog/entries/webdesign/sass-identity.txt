Sassの存在意義

<p><a href="http://sass-lang.com">Sass</a>はCSSの貧弱さを補うような便利機能について取り上げられることが多い。そのためその機能の奥に隠れているものについて触れられることはあまりない。例えば変数や四則演算、関数によって値に論理的な意味を持たせることができることとか。そういうCSSに足りない概念の導入できることとかももちろん周知させたいけど、それ以上にHTMLとCSSによるWebサイトの作成に新たなアプローチが加わることを周知させられればいいなぁと最近思う。Sassの存在意義というのはその辺りに見いだせるんじゃないかと考えているので。もう「CSSグラデーションのミックスイン！」とかスニペットでやれるようなことを推すのはやめたい(やめてほしい)。</p>

<p>現状ではWebサイトは以下の2つのアプローチでしか作成(更新)できない。</p>

<ol>
<li>HTMLで文書をマークアップして、それに合わせてCSSにセレクターを書く</li>
<li>CSSでデザインを定義して、それに合わせてHTMLでクラスを振る(OOCSSやCSSフレームワークが採用する形)</li>
</ol>

<p>Sassがあるとこれらに加えて、</p>

<ol start="3">
<li>HTMLで文書をマークアップして、CSSでデザインを定義し、Sassで両者を関連付ける</li>
</ol>

<p>ということが可能になる。</p>

<p>ただ、Sass(y CSS)ではCSSもそのまま書け、デザインの定義と文書への関連付けまでをSassで行えるため、実際にはその2つがぐちゃぐちゃに混ざる形のコードを書いてしまうことが多い(まだ僕もそういう書き方から脱却できていない)。その結果、1とあんまり変わらないんじゃないかみたいなところもあって、Sassの存在意義に疑問を持っちゃう人もいるんじゃないかと思う。3のような形を実現するには<code>@extend</code>や<code>@media</code>のネストを駆使してこの2つを切り分ける必要がある……んだけど、そこまで実践できている人は少ない(ほとんど知らない)。</p>

<p>この話をもっとちゃんと書きたいんだけどうまくまとめる自信がない。<code>@extend</code>が引数使えないミックスインみたいにとらえられている現状は是非打開したい。</p>

<h2>追記</h2>

<p>SassやLESSがあるとCSSフレームワークの使い方がどう変わるかという<a href="/blog/webdesign/sass-identity-follow-up.html">具体的なユースケースを使って少し補足した</a>。</p>
