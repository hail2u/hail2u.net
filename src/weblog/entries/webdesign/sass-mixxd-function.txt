mixxd()というSassの関数を作った

<p><code>rgba()</code>のエミュレートには<a href="/blog/webdesign/sass-adjust-rgb-function.html"><code>adjust-rgb()</code></a>だけでは不十分なので、ちゃんと背景色と混ぜる<code>mixxd()</code>という関数を作りました。<code>mix()</code>の第三引数が小数のバージョンで、xdはBy Decimalの略です。ユーザー定義関数のうまい命名規則欲しいなぁ……。</p>

<pre><code class="language-scss">@function mixxd($color-1, $color-2, $weight: 0.5) {
  $percentage: percentage(1 - $weight);

  @return mix($color-1, $color-2, $percentage);
}
</code></pre>

<p><code>rgba()</code>や<code>transparentize()</code>と同じ小数を引数に取ることが出来るので、%を引数に取る<code>mix()</code>よりも混乱しにくいんじゃないかと思います。</p>

<pre><code class="language-scss">$bg: #f9f6f0;

body {
  background-color: $bg;

  &gt; footer {
    background-color: mix(black, $bg, 0.9);
    background-color: transparentize(black, 0.9);
    // background-color: rgba(0, 0, 0, 0.9);
  }
}
</code></pre>

<p>第一引数でベースになる色、第二引数で混ぜる対象の背景色、第三引数で混ぜる割合を指定して使います。割合は0に近づくほどベースになる色に近づき、1に近づくほど混ぜる対象の背景色に近づくので、<code>rgba()</code>の透過率とほぼ同じと考えてください。小数点以下の扱いがSass任せなので完全に一致はしませんが、ほぼ同じような色合いになると思います。背景画像と混ぜる場合は……まぁ頑張って工夫してください。</p>

<hr>

<p><code>mix()</code>で小数が通るということに気づいて「うわ無駄なことした……」とか一瞬思ったんですが、そんなことはなかったので良かったです。</p>

<pre><samp>$ <kbd>sass -i</kbd>
&gt;&gt; <kbd>mix(black, white, 0.1)</kbd>
#fefefe
&gt;&gt; <kbd>mix(black, white, 0.1%)</kbd>
#fefefe
&gt;&gt; <kbd>mix(black, white, 0.9)</kbd>
#fcfcfc
&gt;&gt; <kbd>mix(black, white, 0.9%)</kbd>
#fcfcfc
</samp></pre>

<p>インタラクティブ・モードで試すとこういう感じなので、通ることは通るんですが%とみなされている感じですね。エラー吐かないのはバグでしょう。</p>
