ウェブデザインにおけるセマンティック・バージョニング

<p>アプリケーションの世界では<a href="http://semver.org/">セマンティック・バージョニング</a>が広く受け入れられた……かどうかはわからないが、採用例はすごく増えている印象だ。ウェブデザインではどうかというと、ウェブ・アプリケーションのバージョニングに追随しているだけであったり、そもそもバージョニングされていなかったりするような気がする。ウェブデザイン、主にCSS(とCSSプリプロセッサー)においてセマンティック・バージョニングを導入するとすると、どのようなタイミングでメジャー、マイナーそしてパッチ番号を増やせば良いのだろうか。</p>

<p>セマンティック・バージョニングの中心となる概念は<em>後方互換性</em>だ。後方互換性が:</p>

<ul>
<li>失われる: メジャー</li>
<li>失われない新機能の追加: マイナー</li>
<li>失われない修正: パッチ</li>
</ul>

<p>数語でまとめるとこのようになるだろう。ウェブデザインにもこれを当てはめるとすると、ウェブデザインにおける後方互換性とは何なのかということをまず考える必要がある。</p>

<h2>ウェブデザインにおける後方互換性</h2>

<p>単純に考えるとマークアップを基準にするとうまくいきそうだ。しかしそれはウェブデザインの後方互換性ではなく、単にマークアップ及び場合によるとコンテンツの後方互換性に過ぎないと思う。マークアップの変更によりCSSの大幅な変更を余儀なくされることはあるが、違うマークアップでも同じような見た目と振る舞いにすることはそれほど難しいことではない。とすると、ウェブデザインにおける後方互換性はコードそのものではなく、その<em>見た目と振る舞いの変化</em>に集約される言えそうだ。</p>

<p>ウェブデザインは、ウェブサイトの、そしてコンテンツの見せ方を定義する作業だ。そしてそれはユーザーの見方に影響を与えるものなので、その後方互換性とはつまりそのユーザーの見方であるだろう。</p>

<hr>

<p>ということはウェブデザインにおいて後方互換性が失われる変更とは、ユーザーの見方に変化を強いる変更ということになる。</p>

<h2>メジャー番号の増加</h2>

<p>ユーザーの見方の変化を強いる変更としては以下の様なものが挙げられる。</p>

<ol>
<li>テーマカラー</li>
<li>レイアウト</li>
</ol>

<p>これらを変更した場合に後方互換性が失われるとして、メジャー番号を増やすべきではないだろうか。漠然としたイメージとして「大きなデザインの変更」となるような作業を行う場合は、上記のいずれかは変更になるだろうし、それほど難しく考えることもないかもしれない。</p>

<p>ロゴの変更も含めても良いかもしれないが、これはこれで別にバージョニングするべきだと思う。</p>

<h2>マイナー番号の増加</h2>

<p>特定のブラウザーで起こる問題の修正などは新機能の追加ではないので、パッチ番号の増加で良いというのはすぐにわかる。ではマイナー番号を増加するような新機能の追加とはどういうものだろうか。</p>

<p>新しいウィジェットの追加などは機能の追加としてわかりやすいが、それだけではない。フォントの変更や色の微妙な更新、カラム幅の変更など、ユーザーに影響を与えるものの既存のデザインのアップデートに留まる(後方互換性が維持される)ような変更も含まれると思う。それらは<em>新たな見せ方</em>という機能面での追加だからだ。</p>

<ol>
<li>フォントの変更</li>
<li>カラー(テーマカラーを除く)の調整</li>
<li>カラム幅の変更</li>
<li>フォント・サイズ及び余白の調整</li>
<li>アイコン画像の変更</li>
<li>ウィジェットの追加</li>
<li>マークアップや画像等の変更を受けてのスタイルの更新</li>
</ol>

<p>これらを行った場合はマイナー番号を増加するべきだろう。</p>

<h2>パッチ番号の増加</h2>

<p>先述の特定のブラウザーでの問題への対応を始め、記述ミスの書き直しなど、<em>修正</em>という言葉で表現できるものが主だが、その修正とは主にそのデザインの意図が正しく反映されていないことへの修正である。</p>

<p>例えば、新しく作り直したナビゲーションが小さい画面でうまく収まりきらず、このままではまずいので、横並びだったのを縦並びにする変更を加えたとしよう。レイアウトを大きくいじることになり、見た目に大きな変更が加わる。このような場合でも、そもそもうまく機能していないものを修正したということなので、パッチ番号の増加で良いだろう。</p>

<p>修正にはマークアップの変更が必要になるケースの場合でも、マークアップの変更を<em>受けて</em>のスタイルの更新ではないので、パッチ番号の増加にする方が良い。スタイルが機能していなかったのをマークアップの変更を加えて修正しようという作業だからだ。</p>

<hr>

<p>メジャーとマイナーの境界はともかく、マイナーとパッチの境界をもうちょっと明確に定義できれば実践しやすくなると思う。セマンティック・バージョニングと<a href="/blog/webdesign/start-with-a-style-guide.html">Style Guideから始めるウェブデザイン</a>を組み合わせることを前提とすると、スタイル・ガイドを変更してから書くような作業はマイナー番号の増加になるのではないかと明確に定義できそうだが、開発手法として認知すらされていないので微妙なところだ。</p>

<p>いずれにしてもバージョニングをきちんと行おうとすることによって、masterブランチでやって良い程度の作業なのか、それともトピック・ブランチを切って実装する必要があるのかを意識できるようになると思う。ウェブデザインでは簡単に実装と確認が行えるため、そういった所は軽視されがちだ。セマンティック・バージョニングをウェブデザインにも導入することにより、わかりやすい開発ログだけではなく、開発フローの改善にもつながるのではないだろうか。</p>
