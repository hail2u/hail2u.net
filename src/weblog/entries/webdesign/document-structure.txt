文書構造を見なおした(ている)

<p>HTML5化した後、アウトラインがおかしかったところを修正したり、<a href="http://www.w3.org/TR/wai-aria/">WAI-ARIA</a>を導入したり、少し調整してたりしました。まだまだ行き届いていない所があるし、本当にこれでいいのとか色々座りが悪い感じですね。</p>

<pre>body
|
+--header role="banner"
|  |
|  +--h1
|  |
|  +--nav
|
+--div id="main" role="main"
|  |
|  +--section or article or nav
|
+--footer role="contentinfo"
   |
   +--address
   |
   +--section
</pre>

<p>おおよそのページで共通の部分は以上のような形になっています。<code>div#main</code>がちょっとアレな気がしますね。本当はページによって<code>article</code>要素に<code>role="main"</code>持たせたりとか色々ちゃんとしたいところなんですが、<a href="http://blosxom.sourceforge.net/">Blosxom</a>のflavour(テンプレート)を書くのが面倒になって妥協しました。これに補助ナビゲーションやら広告やら<a href="http://developers.facebook.com/docs/reference/plugins/like/">いいね！ボタン</a>が追加されるわけです。</p>

<pre>body
|
+--header
|
+--div id="main" role="main"
|  |
|  +--article
|
+--nav class="paging"
|
+--footer
</pre>

<p>ページング・ナビゲーションは<code>body</code>直下に置きました。HTML5化した当初は<code>article</code>要素直下にスタイリングの都合上配置してたりしました……。ページングと同じく同一サイト内のコンテンツにリンクする「関連するエントリ」なら<code>aside/nav</code>として、一覧ページからpermalinkへリンクする「続きを読む」というようなものの場合は<code>nav</code>としてそれぞれ<code>article</code>要素直下に配置した方が良いと思います。</p>

<pre>body
|
+--header
|
+--div id="main" role="main"
|  |
|  +--article
|  |
|  +--aside class="adsense"
|
+--footer
</pre>

<p>広告もコンテキスト広告のようなものであっても<code>article</code>要素には含めない方が良さそうです。Google AdSenseの場合は親のセクションを見てマッチングを調節とか、自動で<a href="http://www.google.com/adsense/support/bin/answer.py?hl=ja&amp;answer=23168">セクション ターゲット</a>をやってそうな気がしますけどどうなんですかね？<code>#main</code>直下なのは配置上の都合(<code>article</code>要素の間に挟みたいという都合)なので良くないですね。CSSで要素をコピーしてまったく別の場所に移動させるとかできるようになる何かがあったような気がしますが、思い出せません……。<a href="http://www.w3.org/TR/html5/content-models.html#wai-aria">HTML5とWAI-ARIAの関係</a>において<code>aside</code>要素はデフォルトで<code>note</code>ロールとなってたりするので、<code>complementaly</code>とか指定した方が良さそうですが、<code>complementaly</code>もなんか違うなぁという感じでまだ何も指定していません……。</p>

<pre>body
|
+--header
|
+--div id="main" role="main"
|  |
|  +--article
|     |
|     +--aside class="like"
|
+--footer
</pre>

<p>対していいね！ボタンはその対象となるセクショニング・コンテンツ(かセクショニング・ルート)の要素に属する形で置くべきでしょう。ブログの記事などの場合はこのように<code>article</code>要素の直下が、Webサイトのホームページの場合は<code>body</code>要素直下が適切な場所になると思います。<a href="http://s.hatena.ne.jp/">はてなスター</a>もいいね！ボタンと同様の扱いをすべきですがこれもまた配置の都合上で……ごにょごにょ。</p>

<hr>

<p>まぁ以上でわかるように同じ要素・同じクラスで違う階層にあったりとかするので、繰り返し使うことになる<code>aside</code>や<code>nav</code>要素等にあまりスタイルを当てることができなかったりします。複雑怪奇なセレクタルールで上書きしまくらないとならなくなるので。加えてIDをCSSで使わないようにする強化月間中なのでCSSを書くのが結構辛かったですが、なんとなく慣れてきました。隣接セレクタを使ってたりもするのでプロダクション・レベルで使えるような知識では今のところありませんが、やろうと思えば結構出来るもんですね。</p>

<p>複雑なクラス指定と馬鹿丁寧なセレクタによって自由自在にデザインすることができますが、その反面それではCSSコードのポータビリティが失われます。HTMLレベルから手を加えるようなCSSフレームワークで揃えるならそのポータビリティはあまり問題にならないでしょうが、まぁそううまくはいかないですよね。リセットからノーマライズへというのもそういうCSSコードそれ自体のポータビリティを確保するという理由もあるんじゃないかなと思います。DOM操作によるリペイントやリフローの問題とかもあるので、一概に「ID使うな！クラス指定も減らせ！」とは言えないんですけどね。</p>

<hr>

<p>HTML5では否応なく文書構造を意識せざるを得ないので、実際にHTML5としてインターネット上に公開しなくても手持ちの(X)HTMLの文書をHTML5化してみると、その(X)HTMLの構造がどういう問題を抱えているかなどがよくわかると思います。精神衛生上良くないですけどね！</p>
