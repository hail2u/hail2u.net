CSSでアイコンをデザインへの補足

<p>追記で<a href="/blog/webdesign/design-icon-with-css.html">CSSでアイコンをデザイン</a>の対応ブラウザについてざっと書いておいたが、そこで「知らない」とか「書きたくない」とIE8のところで書いた。それをどうも意図した方向とは違う感じで捉えられてしまっているようだったので、すこしだけ補足する。すでに勢いに任せて<a href="http://subtech.g.hatena.ne.jp/h2u/20110304/1299215875">某所でも書いてしまった</a>がもうちょっとはっきりと書く。IE8でもこうやればできるよ！とかいう話ではなく、もっとモヤッとした話。</p>

<p>そもそもIE8でもちゃんと見えるように「書きたくなかった」のは、ベンダー拡張プリフィックスすら書きたくないというような意識があるからに過ぎない。Operaでグラデーション対応するためのSVGとかももちろん書きたくはない(書いてみたら面白かったので書いちゃったけど)。実際書きたくなかっただけで、IE8でもあの程度のことなら<code>filter</code>プロパティで実現できる。<code>filter</code>プロパティには複数の背景画像を実現するのに使える<code>AlphaImageLoader()</code>フィルタがあるし、二点間のグラデーションしかサポートしていない<code>gradient()</code>も適切に複数使えば反射させることもできるだろう(円形グラデーションは無理だけど、あのエントリでは出てこないので関係ない)。回転させたいなら<code>Matrix()</code>フィルタがある(IE4から！)。労力としては統一されていないベンダー拡張プリフィックスをそれぞれ書いたり、代用のためのSVGを書いたりする労力とあまり変わらないはずだ。検索ビリティが低いとは言えMSDNでちゃんと文書化されているわけだし。IE8以下が他の現行ブラウザに比べて大きく劣るのはWeb標準のサポートに過ぎず、表現力ではない。</p>

<p>こう書くとIE8擁護的になってしまうが、もちろんIE8以下及びIE9においてすらWeb標準のサポート以外にも開発者にとって大きな問題は数多くある。数えたくもないくらい数多くだ。モードという史上最低の概念が拡充されたことはその最たるものだろう。関係ない話だが。</p>

<p>話を戻す。CSSでアイコンをデザインをコピペで使える実践的なテクニックかどうかという観点で判断するなら、適切にフォールバックされることを考慮したCSSの書き方ではないので間違いなく実践的ではない。多分、そういったことを踏まえて<q>趣味のサイトなら</q>とか<q>面白いとは思うけど</q>、挙句の果てには<q>IEは本当にクソ！！</q>などという反応がされたんだろうと思う。しかし、それはあのエントリのデモがそう書かれているだけの話で、IE6/7はともかくとしてIE8に対応させるのはそう難しい話ではない。<code>filter</code>プロパティでやってもいいだろうし、フォールバックというだけなら条件付きコメントを利用して角丸化したりしたアイコン化済みの画像をロードするCSSをIEだけに適用させたりしてもいいだろう。つまりそういう実践的な &mdash; <a href="/blog/webdesign/bordered-speech-bubble.html">枠線付きの吹き出し</a>のような &mdash; テクニックとして書いたわけではなかったのだ。</p>

<p>あのエントリは「今すぐ使えるCSS3の実践テクニック」とか「CSS3のサポート足りなくてモダンじゃないよねー誰とは言わないけど」とかそういう話ではなく、単なる<em>来るべき未来のブラウザの表現力</em>についての話のつもりだった。実際、普通に書くとGoogle Chrome 10 betaや11 devとFirefox 4 betaでしかまともに表示されない。来るべき未来のブラウザの表現力、つまりCSSがもはや単に機械的に見た目を変化させる ― 文字を斜体にするとか点線で囲むとか ― というだけのものではなく、その見た目に与える変化をまるでPhotoshopのように細かく制御できるようになる(数年前からそうなっていた)というようなある種の啓蒙活動のようなつもりだった。</p>

<ul>
<li>複数の背景画像を扱えるようになったおかげで、レイヤーと似たようなものがCSSで実現できるようになる(なった)</li>
<li>CSSグラデーションのおかげで、グラデーションオーバーレイのレイヤー効果がCSSで実現できるようになる(なった)</li>
<li><code>box-shadow</code>のおかげで、ドロップシャドウやシャドウ (内側)のレイヤー効果がCSSで実現できるようになる(なった)</li>
<li><code>rgba()</code>や<code>hsla()</code>・<code>#AARRGGBB</code>のおかげで境界線を滑らかに背景とブレンドさせることが出来るようになる(なった)</li>
</ul>

<p>具体的に列挙するとこうなる。エントリでは示唆しただけだが、画像では不可能な角丸を考慮した<code>box-shadow</code>プロパティによるドロップシャドウやWebフォントでカスタムシェイプのような機能を実現する(HTMLおかしくなるから<code>content</code>プロパティで使ってね！)などもそうだ。</p>

<p>エントリでは文章としてこういったことを具体的に書かなかったので、残念ながらうまく伝わらなかった。タイトルも良くなかったかもしれない。</p>
