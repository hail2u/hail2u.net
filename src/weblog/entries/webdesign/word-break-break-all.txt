word-break: break-all

<figure>
  <img src="/images/blog/word-break-break-all.png" alt="word-b/reak: break-a/ll;">
</figure>

<p>英単語の間であっても自動改行されるように、<code>word-break</code>プロパティーで<code>break-all</code>を採用しているウェブサイトが地味に増えているような印象だ。コスメティックな理由で見出しやサムネイルの付記などに使うのは悪くない妥協だと思うが、本文にもわりと気軽に使われていて<em>かなり</em>気になる。</p>

<p>日本語では特に単語の切れ目という論理的な箇所は存在せず、ブラウザーではどこでも自動改行される。せいぜい句読点が行頭にならないように制御されるくらいだ。<a href="http://www.w3.org/TR/css-text-3/#word-break-property"><code>word-break</code>プロパティー</a>ではこの自動改行における単語の禁則処理を制御できる。値として<code>break-all</code>を指定すると禁則処理が解除され、現在のブラウザーの実装では以下のような事象が起こる。</p>

<ul>
<li>英単語の間で改行される</li>
<li>行頭でも記号が許可される</li>
</ul>

<p>前者がわかりやすく、これを目的としていることが多い。こうすることによってタイポグラフィーでいうところの<a href="http://en.wikipedia.org/wiki/Typographic_alignment#Flush_left">flush left (ragged right)</a>を解消でき、文字のおさまりがよくなるというわけだ。<code>text-align: justify</code>が英語交じりの日本語で想定通りに動かない(意図しない大きな空白が生まれてしまう)こととそれと組み合わされるべき<a href="http://www.w3.org/TR/css-text-3/#hyphens-property">hyphens</a>プロパティーのきちんとした実装が進んでいないことから、現実としては両端を揃える唯一の手段ということになる(なっている)。</p>

<p>単語間で改行を許可されるということは、その単語が意図しないところで分断されるということなので、可読性を著しく阻害する。“justify”と書いたのにも関わらず、“just”で分断されていたら読み違えることがあるだろう。また、そういう意図しないところで改行される文章だと知った後は、そのことを意識しながら文章を読む必要が出てきてしまう。</p>

<p>この問題を解決するには<a href="http://ja.wikipedia.org/wiki/%E3%83%8F%E3%82%A4%E3%83%95%E3%83%B3#.E4.B8.A1.E7.AB.AF.E6.8F.83.E3.81.88.E3.81.A8.E8.A1.8C.E3.81.AE.E6.8A.98.E3.82.8A.E8.BF.94.E3.81.97">ハイフネーション</a>が必要になるが、上述したようにこの機能を提供する<code>hyphens</code>プロパティーの実装は進んでおらず、限られたブラウザーの限られた言語のページでしか想定通りに動くことはない。もしこの単語の分断が可読性に影響を与えないのならば、<code>hyphens</code>プロパティーでハイフネーションを提供しつつその実装を待つという態度も許されるだろうが、実際には<em>著しく</em>影響を与える。事実上使いものにならない(プログレッシブ・エンハンスメントにならない)と言って良いだろう。</p>

<p>もう一つは記号(句読点など)が行頭に来てしまう問題だ。Internet Explorer 11では起こらないが、Chrome 34やFirefox 29では起こる。こちらは可読性にはあまり影響を与えることはないが、その一方でその見た目に大きな影響を与える。単語間で改行させることによっておさまりの良さを得ようとしたのにも関わらず、グリフが小さい記号が行頭に来てしまうことによってその意図は達成できなくなる。本末転倒と言えるだろう。</p>

<hr>

<p><code>word-break: break-all</code>に一定の効果はあることは確かだが、本文で気軽に使えるようなものではない。矩形を強く意識させたい、そして主に読まれるのではなくスキャンされるような特殊なウィジェットのみでの利用に限るのが良い。本文のおさまりの良さは、<code>text-align: justify</code>と<code>hyphens: auto</code>の組み合わせが気軽に使えるようになるまで気長に待つしかないだろう。</p>
