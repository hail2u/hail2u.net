効率の良いBlosxomプラグイン

<p><a href="http://blosxom.sourceforge.net/">Blosxom</a>ではプラグイン同士が連携することはほとんど考慮されていない。プラグインで何でも出来るけど、なんでも効率的にできるわけではないということで、ここらへんはBlosxomの語られていない闇の部分(誰も興味ないから)。例えば<code>head.flavour</code>でエントリーのタイトルとかを利用しようとするとプラグインが必要になるので書くわけだけど、いずれ<code>blosxom.cgi</code>が読んでくれるファイルを自前で読まなくてはならなくてスーパー非効率的。</p>

<p>上で例として挙げたpermalinkでエントリーのタイトルを<code>title</code>要素にぶち込むプラグインというのを考えてみる。ストレートに実装すると、<a href="http://muli.cc/blosxom/plugins/v2/better_title-v2i0b.txt">better_title</a>や<a href="http://exo.org.uk/code/storytitle/">storytitle</a>、<a href="https://github.com/hail2u/blosxom-plugins/blob/master/entry_title">entry_title</a>みたいに<code>head</code>サブルーチンでエントリーファイルを読んでタイトルを切り出して変数に格納することになる。これをどうにかして自前でファイルを読まないようにするには一工夫が必要。</p>

<pre><code class="language-perl"># Blosxom Plugin: permalink
# Author(s): Kyo Nagashima &lt;kyo@hail2u.net&gt;
# Version: 2012-04-05T15:28:39+09:00
# Blosxom Home/Docs/Licensing: http://blosxom.sourceforge.net/

package permalink;

use strict;
use vars qw($title $title_sep);

# --- Configurable variables -----------

# separator string between $blog_title and $title
my $str_title_sep = " - ";

# --- Plug-in package variables --------

my $title_placeholder = '{{{permalink::title}}}';
my $t;

# --------------------------------------

sub start {
  if ($blosxom::path_info !~ /\.\Q$blosxom::flavour\E$/) {
    return 0;
  }

  $title     = $title_placeholder;
  $title_sep = $str_title_sep;

  return 1;
}

sub story {
  my($pkg, $path, $filename, $story_ref, $title_ref, $body_ref) = @_;

  $t = $$title_ref;

  return 1;
}

sub last {
  $blosxom::output =~ s/$title_placeholder/$t/m;
}

1;
# vim:ft=perl:
</code></pre>

<p>最終的にはrss10プラグインなどでも使われているプレースホルダーを作って<code>last</code>サブルーチンで置換するというテクニックを使うわけだけど、flavourにも<code>$permalink::title</code>などと書けるようにしてある。permalinkではない場合は<code>$permalink::title</code>は空になるので、<code>head.flavour</code>では以下のように書くだけで良い。</p>

<pre><code class="language-html">&lt;title&gt;$permalink::title$permalink::title_sep$blog_title&lt;/title&gt;
</code></pre>

<p>これでインデックスページではこうなり、</p>

<pre><code class="language-html">&lt;title&gt;Weblog - hail2u.net&lt;/title&gt;
</code></pre>

<p>permalinkでの出力はこうなる。</p>

<pre><code class="language-html">&lt;title&gt;効率の良いBlosxomプラグイン - Weblog - hail2u.net&lt;/title&gt;
</code></pre>

<p>flavourに<code>{{{plugin:placeholder}}}</code>みたいに書かせると、常にそのプラグインを有効化しておかないとHTMLに無意味な文字列が出てしまう<ins>ことがある</ins>し(コメントとかにすれば少しは改善するけど)、必要のない時も置換しないといけなくてちょっとアレなので上記のような実装が一番効率的なんじゃないかと思う。</p>

<p>久々にBlosxomプラグインを書いたのでなんか見落としてそう。</p>
