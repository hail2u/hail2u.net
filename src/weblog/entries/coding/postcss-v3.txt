PostCSS v3の変更点

<p><a href="https://github.com/postcss/postcss/releases/tag/3.0.0">PostCSS v3.0.0</a>がリリースされ、かなり高速化した。一部互換性のないAPIの変更があるが、多くは内部的な変更でそれほど影響はないような印象だ。</p>

<p>一番大きな変更点はノードの配列名の統一だろう。今までルールセット内の定義の配列は<code>decls</code>、ルールセットの配列は<code>rules</code>と分けられていたが、v3.0.0で<code>childs</code>に統一された。At-ruleでは子ノードに定義をとるもの（<code>@font-face</code>など）とルールセットをとるもの（<code>@media</code>など）があるので、別々に処理しなければならないパターンもありえたが、その必要が少し減ることになる。</p>

<p>なお<code>childs</code>という違和感のある名称はv3.1.0で<code>children</code>（か<code>nodes</code>など）に修正される模様。</p>

<p>もうひとつはSource Mapの生成でインラインのものがデフォルトになったことだ。別ファイルに吐きたい場合は明示的に無効にする必要がある。言い換えると<code>from</code>や<code>to</code>が事実上必須ではなくなったということでもある。</p>

<pre><code class="language-javascript">var postcss = require(&#39;postcss&#39;);
var css = &#39;.foo { color: black }&#39;;

console.log(postcss.process(css, {
  <mark>map: true</mark>
}));
// .foo { color: black }
// /*# sourceMappingURL=data:application/json:base64,... */

console.log(postcss.process(css, {
  <mark>map: {
    inline: false
  },</mark>
  from: &#39;in.css&#39;,
  to: &#39;out.css&#39;
}));
// .foo { color: black }
// /*# sourceMappingURL=to.css.map */
</code></pre>

<p>ただし既に外部Source Mapファイルを参照しているCSSを処理する場合は、そのまま外部Source Mapファイルを更新するようになっている。ここらへんを強制的に変更する手段が用意されていないようで、片手落ちっぽい。</p>

<p>またデフォルトで元ソースを埋め込むようにも変更になった。微妙な部分だけれど、元ソースが不要になるとパス解決の面で楽ができると思うので、歓迎できる変更と捉えている。</p>

<hr>

<p>速度の改善がメインのようなので、既存のコードはちょっとした変更だけで動くように思う。Source Mapsだけには注意してやりたい。</p>

<p><a href="https://github.com/hail2u/node-csswring">CSSWring</a>は少々手を入れる必要があったが、簡単な変更でだいたい大丈夫そうだ。ついでにCLIツールで出力ファイル名がなかった場合にインラインでSource Mapを埋め込むようにしておいた。<a href="https://github.com/hail2u/node-css-mqpacker">CSS MQPacker</a>は特に変更することなく更新出来た……が、テストがテストになってない（<code>undefiend === undefined</code>で通ってた）ようなので修正した。</p>
