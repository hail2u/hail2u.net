Handlebars.jsを使ったファイル生成Gruntタスク

<p><a href="https://gist.github.com/hail2u/6310613">主にHTMLの生成を行うGruntタスク</a>の話。色々なテンプレート・システムの利用を考えたんだけど、<a href="http://handlebarsjs.com/">Handlebars.js</a>にした。よく使うからというのもあるし、いざとなったらデータの再構成を待たずにその場しのぎでテンプレートにロジックを混ぜてお茶を濁せるのが好き。その場しのぎ、お茶を濁す、良い言葉だ。</p>

<p>このGruntタスクは指定されたHandlebars.jsテンプレート(例えば<code>foo.hbs</code>)をレンダリングするだけのもの。レンダリングに使うデータは、基本のメタデータ(<code>metadata.json</code>の中味)とテンプレート・ファイルごとに指定できるメタデータ(<code>foo.json</code>の中味)をGruntに含まれる<a href="http://lodash.com/">Lo-Dash</a>の<code>extend()</code>を使ってマージしたものを使う。Gistのサンプルにあるように基本のメタデータにないものを自由に追加できるし、基本のメタデータを上書きすることも出来る。</p>

<p>コアの<code>generate.js</code>では<code>include</code>というヘルパー関数を作って共通部分を別に切り出せるようにした。ほぼSSIのインクルードと同じようなもの。Handlebars.jsが優秀なので、取り込むテンプレートでも普通にデータの利用は可能。</p>

<p>テンプレートと出力が1対1なシステムなので、コンテンツ部分は直接テンプレートに混ぜている。僕の場合は大体HTMLで配信するものはHTMLで書くので、<a href="http://daringfireball.net/projects/markdown/">Markdown</a>で書いたコンテンツを外から取り込んで……とかそういうのを機能として作っちゃうまではやらなかった。これまたHandlebars.jsが優秀なので、別にMarkdownで書いたものをHTMLに変換してコンテンツとして取り込むなどもたぶんメタデータに関数書くだけでいける。コアでの変更はMarkdownをHTMLに変換するための<a href="https://github.com/chjj/marked">Marked</a>等を<code>require()</code>しておくくらい。</p>

<p>あとは<a href="http://gruntjs.com/">Grunt</a>の動的マッピングや柔軟なタスク構成にお任せ。サンプルの<code>Gruntfils.js</code>のように動的マッピングで指定ディレクトリ以下の<code>*.hbs</code>を一気に処理するのが基本で、指定したファイルのリビルドだけを行うのを作っておいたりとか、ウェブログの更新に伴いいくつかのファイルの更新だけを行うのを作っておいたりとか環境に合わせて色々タスク設定を作る。例えば指定したファイルのリビルドなら以下の様な設定を作ってやると良い。</p>

<pre><code class="language-javascript">generate: {
  file: {
    expand: true,
    cwd: &#39;.grunt/html/&#39;,
    src: <mark>grunt.option(&#39;file&#39;)</mark>,
    filter: &#39;isFile&#39;,
    dest: &#39;./&#39;,
    ext: &#39;.html&#39;
  }
}</code></pre>

<p>これで<code>--file</code>オプションを見て生成できる。</p>

<pre><samp>$ <kbd>grunt generate:file <mark>--file=index.hbs</mark></kbd>
</samp></pre>

<p>面倒くさいテンプレートと出力のマッピングや、コマンド(やボタン)一発で作業を一気にこなすというようなCMSの基本的な部分をGruntによっかかっている。するとこのような数十行のJavaScriptでウェブサイトの管理……とまではいかないけど、効率的な運営くらいは可能になる。</p>
