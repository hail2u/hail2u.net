Sassユーザー定義関数のテスト

<p>除夜の鐘をBGMに<a href="http://bower.io/">Bower</a>パッケージの<a href="https://github.com/hail2u/scss-functions">hail2u-scss-functions</a>のテストを書いていた。Gruntでコンパイルして期待される結果と付き合わせるだけだけど、あるとないのとでは大違いな気がしないでもない。</p>

<p><a href="https://github.com/hail2u/scss-functions/blob/master/test/fixtures/string.scss">パーシャル読み込んで使ってみるSCSSファイル</a>と、それのコンパイル結果として<a href="https://github.com/hail2u/scss-functions/blob/master/test/expected/string.css">想定されるCSSファイル</a>を書き、Gruntの<a href="https://github.com/gruntjs/grunt-contrib-sass">grunt-contrib-sass</a>プラグインでコンパイルし、CSSファイルの中身を<a href="https://github.com/gruntjs/grunt-contrib-nodeunit">grunt-contrib-nodeunit</a>プラグインの<code>strictEqual()</code>を使って突き合わせるというテスト。Sassの全般的なテストを書くのは難しいけど、ユーザー定義関数やミックスインなどはこういう形で書ける。</p>

<p>手間がかかる割には報われないような気がするけど、世界中のミックスインとユーザー定義関数にテストがあればそれも変わるんじゃないかと思いながら書いた。変わんないか。</p>

<h2 id="bower-">Bowerの無視ファイル</h2>

<p>テストとかを始め、ユーザーがBowerパッケージ自体を利用する時には必要ないものを色々リポジトリに突っ込んでいる場合、<code>bower.json</code>の<code>ignore</code>を書くのが面倒くさい。<code>include</code>みたいの作ろう！みたいなIssue見た気がするので、結構みんな同じようなことは感じていそう。もっともBowerはBowerでインストールしてそのまま使うみたいなのはあまり想定されていないような気もするので、<code>ignore</code>書きたければ書けやみたいな感じなのかも。そうなると<code>git clone</code>や<code>git submodule</code>との違いが微妙な感じにもなるような。</p>

<hr>

<p>2014年は積極的にこういったSassのテスト、できればCSSのテストも書いていきたい。</p>
