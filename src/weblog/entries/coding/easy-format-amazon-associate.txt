簡単な記述でアサマシ

<p>アサマシするには<a href="http://hatenadiary.g.hatena.ne.jp/keyword/%e6%9b%b8%e7%b1%8d%e3%83%bb%e9%9f%b3%e6%a5%bd%e3%83%bb%e6%98%a0%e7%94%bb%e3%81%ae%e7%b4%b9%e4%bb%8b%e3%83%aa%e3%83%b3%e3%82%af%e3%82%92%e6%8c%bf%e5%85%a5%e3%81%99%e3%82%8b%ef%bc%88isbn/asin%e8%a8%98%e6%b3%95%ef%bc%89" title="はてなダイアリーのヘルプ - 書籍・音楽・映画の紹介リンクを挿入する（isbn/asin記法）">はてなダイアリーのisbn/asin記法</a>が最強。比較的環境を選ばずに、ああいったソラでも打てるフォーマットでアサマシできれば良さそうだなというわけで作ってみた。面倒かなとか思ったけど、助言が多かったので結構簡単だった。</p>

<p>結果として、<a href="/pub/test/056.html" title="簡単な記法でアサマシ">複数のアサマシも可能だとかそんな感じのサンプル</a>が出来上がった。アクション！</p>

<p>具体的には、アサマシHTMLコードを挿入したい場所に、</p>

<pre><code class="language-html">&lt;script type=&quot;text/javascript&quot;
  src=&quot;http://example.com/asamashi.js#{ASINコード}&quot;&gt;&lt;/script&gt;
</code></pre>

<p>こんな感じできれば良いかなというイメージで考え始めた。</p>

<p><code>script</code>要素の<code>src</code>属性に記述されたJavaScriptファイルのURLに引数を付けて実現している。引数の取得の方法は<a href="http://script.aculo.us/" title="script.aculo.us - web 2.0 javascript">script.aculo.us</a>の動的ロードの仕組みから。script.aculo.usがそういったテクニックを使っていることは<a href="http://la.ma.la/blog/" title="最速インターフェース研究会">まららん</a>に教えて貰った。簡単に説明すると、</p>

<ul>
<li><code>script</code>要素を列挙</li>
<li>それぞれの<code>src</code>属性を調査</li>
<li>自分自身(asamashi.js)に引数を渡しているかどうか調査</li>
<li>渡されていた場合は拾って変数に格納</li>
</ul>

<p>ということ。これで上記のような記述でASINコードが拾える。ちょっとしたコードの追加ではてなのisbn/asin記法のようなdetailとかimageみたいなのに対応するのも簡単そう。</p>

<p>与えられたASINコードのデータを取得しHTMLにするのは、labs.hail2u.net/amazon/なんかと一緒なので割愛。</p>

<p>書き出しは<code>document.write</code>だとHTML全体が置き換わってしまったので、このままではムリ。これもまららんの助言で記述を、</p>

<pre><code class="language-html">&lt;script type=&quot;text/javascript&quot;
  src=&quot;http://example.com/asamashi.js#{ASINコード}&quot;&gt;&lt;/script&gt;
&lt;div id=&quot;asamashi-{ASINコード}&quot;&gt;&lt;/div&gt;
</code></pre>

<p>として、挿入すべき場所を明示してやることにした。これで<code>document.getElementById(&#39;asamashi-{ASINコード}&#39;).innerHTML</code>にぶち込むだけということになる。</p>

<p>簡単な記法と言っても結構打つのはツライとかいう。ASINコード以外をIMEの辞書に「アサマシ」とでも登録すれば楽かも？</p>

<h2>追記</h2>

<p>この機能を実際に利用するには、asamashi.jsを入手した上で自分のアソシエイトIDに書き換え(できればAccess Key IDも)てどこかにアップロードする必要があるなど、ちょっと色々ある。今のところ誰でも使えるようには作ってない(prototype.jsに依存してたりとか自前の変なライブラリに依存してたりとか)ので、もし使ってみようかなとか改造してみようかなとか思った人は、気をつけること。</p>
