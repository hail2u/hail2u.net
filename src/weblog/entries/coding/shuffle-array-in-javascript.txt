JavaScriptで配列をシャッフル

<p>配列をシャッフル、つまりランダムに要素の位置を入れ替えるというのを、<a href="http://developer.mozilla.org/en/docs/Core_JavaScript_1.5_Reference:Global_Objects:Array:sort" title="Core JavaScript 1.5 Reference:Global Objects:Array:sort - MDC"><code>sort</code>メソッド</a>を使ってやってみたのだけど、明らかにダメダメなものになってしまった。その後、あーでもないこーでもないと考えたのだけど、算数が得意すぎて頭が痛くなった。ということを某所でぼやいたら<a href="http://d.hatena.ne.jp/secondlife/" title="川o・-・）＜2nd life">はてのくん</a>がコードを見つけてくれた。どうやらFisher-Yatesという有名なアルゴリズムでやると良いらしい。</p>

<p>最初に書いたコードは、</p>

<pre><code class="language-js">var a = new Array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9);
a.sort(
  function (a, b) {
    return Math.ceil(Math.random() * 3) - 2;
  }
);
</code></pre>

<p>というもの。<code>sort</code>メソッドは、パラメータに与えられた関数が負の値・0・正の値を返すことによって要素の順序を決定するので、その関数がランダムに値を返せばランダムにソートされるであろうというコード。結果は偏るというか、アルゴリズムがおかしいと予想される結果になった。何気にInternet Explorer 6ではシャッフルされているっぽい感じになるのだけど。</p>

<p>その後、ランダムにsortした後reverseしてまたランダムにsortとかもやってみたりと、いろいろ考えたけど、結局頭がこんがらがるだけでちゃんとシャッフルされているという確信が得られない。</p>

<p>はてのくんがCode Snippetsから見つけてくれた<a href="http://www.bigbold.com/snippets/posts/show/849" title="Array Shuffle //JavaScript Function [javascript] [array] [shuffle] [randomize]">Array Shuffle //JavaScript Function</a>では、Fisher-Yatesなるアルゴリズムを利用しているらしい。このコードは理解しづらかった(シャッフルされることは確認したけど)ので、Fisher-Yatesについて調べてみると、どうやら<a href="http://www.amazon.co.jp/exec/obidos/redirect?tag=hail2unet-22%26link_code=xm2%26camp=2025%26creative=165953%26path=http://www.amazon.co.jp/gp/redirect.html%253fASIN=4873112028%2526tag=hail2unet-22%2526lcode=xm2%2526cID=2025%2526ccmID=165953%2526location=/o/ASIN/4873112028%25253FSubscriptionId=08PWFCAAQ5TZJT30SKG2">Perlクックブック〈VOLUME1〉</a>にも載っている有名なアルゴリズムだそうで。記憶に無いです。</p>

<p>Perlクックブックのレシピ4.18 配列の要素をランダムに並べ替えるでは、</p>

<pre><code class="language-perl">sub fisher_yates_shuffle {
  my $array = shift;
  my $i;
  for ($i = @$array; --$i; ) {
    my $j = int rand ($i+1);
    next if $i == $j;
    @$array[$i,$j] = @$array[$j,$i];
  }
}
</code></pre>

<p>という風になっている。拙い理解でJavaScriptに移植すると、</p>

<pre><code class="language-js">function shuffle(list) {
  var i = list.length;

  while (--i) {
    var j = Math.floor(Math.random() * (i + 1));
    if (i == j) continue;
    var k = list[i];
    list[i] = list[j];
    list[j] = k;
  }

  return list;
}
</code></pre>

<p>となる(と思う)。<a href="/pub/test/065.html" title="配列をシャッフル">サンプル・ページ</a>を作成して試したところ、ちゃんとシャッフルされているようだ。並べ替えるというよりも、入れ替えるという形。</p>

<p>最終的にはどうやら解決した(と思う)ので、勉強にもなったし良かったのだけど、こういうアルゴリズム的なお話はやっぱり知っているといないでは雲泥。アルゴリズム系の勉強のためにもPerlクックブックをちゃんと読み直そう。重いんだよな、アレ。</p>

<div class="asamashi"><figure><a href="http://www.amazon.co.jp/Perl%E3%82%AF%E3%83%83%E3%82%AF%E3%83%96%E3%83%83%E3%82%AF%E3%80%88VOLUME1%E3%80%89-%E3%83%88%E3%83%A0-%E3%82%AF%E3%83%AA%E3%82%B9%E3%83%81%E3%83%A3%E3%83%B3%E3%82%BB%E3%83%B3/dp/4873112028%3FSubscriptionId%3D08PWFCAAQ5TZJT30SKG2%26tag%3Dhail2unet-22%26linkCode%3Dxm2%26camp%3D2025%26creative%3D165953%26creativeASIN%3D4873112028"><img alt="Perlクックブック〈VOLUME1〉" src="http://ecx.images-amazon.com/images/I/51FHW5B8GQL._SL160_.jpg"></a></figure><div class="detail"><p class="title"><a href="http://www.amazon.co.jp/Perl%E3%82%AF%E3%83%83%E3%82%AF%E3%83%96%E3%83%83%E3%82%AF%E3%80%88VOLUME1%E3%80%89-%E3%83%88%E3%83%A0-%E3%82%AF%E3%83%AA%E3%82%B9%E3%83%81%E3%83%A3%E3%83%B3%E3%82%BB%E3%83%B3/dp/4873112028%3FSubscriptionId%3D08PWFCAAQ5TZJT30SKG2%26tag%3Dhail2unet-22%26linkCode%3Dxm2%26camp%3D2025%26creative%3D165953%26creativeASIN%3D4873112028">Perlクックブック〈VOLUME1〉</a></p><ul><li>トム クリスチャンセン,ネイザン トーキントン</li><li>オライリージャパン</li><li>Book</li><li>4873112028</li></ul><p class="powered">Powered by <a href="http://hail2u.github.io/asamashi09/">Asamashi09</a>.</figure></div></div>

<h2>追記</h2>

<p><a href="http://b.hatena.ne.jp/entry/http://hail2u.net/blog/coding/shuffle-array-in-javascript.html" title="はてなブックマーク - hail2u.net - Weblog - JavaScriptで配列をシャッフル">はてブのコメント</a>での指摘を参考にコードをちょっと直した。</p>

<ul>
<li><code>parseInt()</code>から<code>Math.floor()</code>に変更</li>
<li><code>var k = list[i]; list[i] = list[j]; list[j] = k;</code>と少し省略</li>
</ul>

<p>コメントくれた方々に感謝。</p>
