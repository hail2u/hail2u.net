SimpldR: livedoor Readerをシンプルに

<p>しばらく前からユーザー・スタイルシートとユーザー・スクリプトのコンビネーションで<a href="http://reader.livedoor.com/">livedoor Reader</a>をシンプルにして使うようにしていて中々快適なのでまとめてエントリにしてみる。キーボードでサクサク操作できて快適ウハウハとかじゃなくてシンプルな画面でマウス・ホイールを使ってひゅいんひゅいん読む感じ。</p>

<figure><img src="/images/blog/simpldr-preview.png" alt="SimpldRのプレビュー(Firefox)"></figure>

<h2>ユーザー・スタイルシート</h2>

<p>ヘッダの色などを排除するのがメイン。userContent.cssに以下のCSSを追加する。</p>

<pre><code class="language-css">/* livedoor Reader
----------------------------- */
@-moz-document domain(&quot;reader.livedoor.com&quot;) {
  * {
    font-family: &quot;Lucida Grande&quot;, &quot;Trebuchet MS&quot;, sans-serif !important;
  }

  pre, code, kbd, samp, var {
    font-family: &quot;Monaco&quot;, &quot;Andale Mono&quot;, monospace !important;
  } 

  .body img {
    max-width: 100% !important;
  }

  .channel {
    background-color: #ffffff !important;
  }

  .channel a {
    color: #000000 !important;
  }

  .title {
    font-size: 30px !important;
  }

  .channel_toolbar {
    padding-bottom: 1em !important;
    border-bottom: 1px solid #000000 !important;
    background-color: #ffffff !important;
  }

  .item {
    border-bottom: 1px solid #000000 !important;
  }

  .even {
    background-color: #ffffff !important;
  }

  .hilight {
    background-color: #ffffff !important;
  }

  .item_title {
    font-size: 18px !important;
  }

  .adsWrapper {
    margin: 0 !important;
  }
}
</code></pre>

<p>ldR側の設定で「本文の文字サイズ」を15pxにしておくとバランスが良い。<code>display: none;</code>とかはしていないので他のなんかと衝突して困るとかは無いと思う。広告消しとかは自分でどうぞ。あとフォント指定も好きに変えると良いと思う。</p>

<h2>ユーザー・スクリプト</h2>

<dl>
<dt><a href="http://userscripts.org/scripts/show/62381">ldR: Auto fullscreen</a></dt>
<dd>livedoor Readerを自動的にフルスクリーンにする</dd>
<dt><a href="http://userscripts.org/scripts/show/62383">ldR: Show first feed</a></dt>
<dd>livedoor Readerにアクセスした時に最初のフィードを自動的に開く </dd>
<dt><a href="http://userscripts.org/scripts/show/62382">ldR: Go prev/next feed with wheel</a></dt>
<dd>livedoor Readerでホイール・スクロールし切ると自動的に前後のフィードに移動する</dd>
</dl>

<p>1つ目のユーザー・スクリプトで自動的にフルスクリーン、つまり記事表示部分のみにする。他の2つは操作系のものなので、自分好みにカスタマイズしている人は入れる必要は無い。このままだと設定とかにアクセスできないが、ldRにはショートカットキーがあるので、必要な時は<code>z</code>でサイドバー、<code>Shift+z</code>でトップのナビゲーションを表示できる。</p>

<hr>

<p>以上でFirefoxではいける。<a href="http://prism.mozilla.com/">Prism</a>と<a href="http://teramako.github.com/greasemonkey-for-prism/">Greasemonkey for Prism</a>を組み合わせればアプリケーション化も可能。だがスタンドアローン版のPrismの場合は起動に時間がかかり実用的ではなく、<a href="https://addons.mozilla.org/ja/firefox/addon/6665">Firefoxの拡張版のPrism</a>の場合はブラウザを起動済みなら起動速度に問題はなくなるが、それならタブで開けば良い話。</p>

<p>そこで<a href="http://www.google.com/chrome/">Google Chrome</a>に頑張ってもらう。2009-11-20現在の最新安定版のChromeではユーザー・スクリプトをサポートしているので、<a href="/pub/SimpldR.user.js">Chrome向けにカスタマイズしたユーザー・スクリプト</a>をインストールし、以下のようなショートカットを作成すればさくっと起動するSimpldRの出来上がり。ユーザー・スクリプトのインストールは<a href="http://gihyo.jp/dev/serial/01/chrome-extensions/0002">続・先取り！ Google Chrome Extensions：第2回　User ScriptsとContent Scripts</a>の「導入」が一番わかりやすい。</p>

<figure><img src="/images/blog/simpldr-on-google-chrome.png" alt="SimpldR on Google Chrome"></figure>

<p>今のChromeでは残念ながらユーザー・スタイルシートはサポートされていない感じ(僕が知らないだけかも)なので、ユーザー・スクリプト内で強引にスタイルを設定してやっている(あって良かった<code>GM_addStyle()</code>)。スクリーンショットはChrome 3でのものだがChrome 4 betaでも動作する。</p>

<p>アプリケーションのショートカットの作成は、とりあえず普通にChromeでldRを開いてページ メニューからアプリケーションのショートカットを作成を実行し、デスクトップ等に作られたショートカットのプロパティを開き、スクリーンショットのように</p>

<pre>...\chrome.exe&quot; <em>--enable-user-scripts</em> --app=http://reader.livedoor.com/reader/
</pre>

<p>と<code>--enable-user-scripts</code>を追加してやれば良い。Chromiumとかの話はよく知らないけど似たような感じでできるらしい。</p>

<hr>

<p>Chromeのユーザー・スクリプトは書き方わかりづらい……。古い情報と新しい情報が混ざってるので混乱する。</p>
