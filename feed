<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xml:lang="ja-JP" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:creativeCommons="http://backend.userland.com/creativeCommonsRssModule" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Hail2u.net</title>
    <link>https://hail2u.net/</link>
    <description><![CDATA[Hail2u.net is simply a notebook of Kyo Nagashima mainly about web design, programming & their related technologies.]]></description>
    <language>ja-JP</language>
    <managingEditor>hail2u@gmail.com (Kyo Nagashima)</managingEditor>
    <atom:link rel="self" href="https://hail2u.net/feed"/>
    <atom:link rel="hub" href="https://pubsubhubbub.appspot.com/"/>
    <creativeCommons:license>http://creativecommons.org/licenses/by-nc/4.0/</creativeCommons:license>
    <item>
      <title>歴史</title>
      <link>https://hail2u.net/blog/media/historiae.html</link>
      <description>亡くなった父親の蔵書をものすごい勢いで消費している。専門書が多くちょっと読みづらいが、あまり読んだことのないジャンルの本が多くそこそこ面白く読ませてもらっている（読み飛ばしている）。その中でも岩波文庫で出ている「歴史」は良かった。結構読むのに時間がかかるかなと思ったが、中巻まで耐えたら一気に読めた。</description>
      <category>Media</category>
      <guid isPermaLink="true">https://hail2u.net/blog/media/historiae.html</guid>
      <pubDate>Sat, 21 Nov 2015 16:43:00 +0900</pubDate>
      <content:encoded><![CDATA[<figure>
<a href="http://www.amazon.co.jp/gp/product/4003340515/ref=as_li_ss_il?ie=UTF8&amp;camp=247&amp;creative=7399&amp;creativeASIN=4003340515&amp;linkCode=as2&amp;tag=hail2unet-22"><img alt="歴史 上 (岩波文庫 青 405-1)" height="500" src="https://images-fe.ssl-images-amazon.com/images/I/51jVjv3mJcL.jpg" width="350"></a>
</figure>

<p>亡くなった父親の蔵書をものすごい勢いで消費している。専門書が多くちょっと読みづらいが、あまり読んだことのないジャンルの本が多くそこそこ面白く読ませてもらっている（読み飛ばしている）。その中でも<a href="http://www.amazon.co.jp/gp/product/4003340515/ref=as_li_ss_il?ie=UTF8&amp;camp=247&amp;creative=7399&amp;creativeASIN=4003340515&amp;linkCode=as2&amp;tag=hail2unet-22">岩波文庫で出ている「歴史」</a>は良かった。結構読むのに時間がかかるかなと思ったが、中巻まで耐えたら一気に読めた。</p>

<p>中学と高校の世界史の授業では4大文明から始まって、ギリシャに注力という感じだったと思う。同時期の中近東についてはほとんど記憶にない。それ以前のヒッタイトは記憶にあるが、リュディアやメディアのことがまったく思い出せない。通と半端に予備知識がなかったので、かえって新鮮で良かった。</p>

<p>小学生の時に星座にハマったことがあるので、そういう点でも楽しめた。いわゆるギリシャ神話のネタばらしのような、そうでもないような混沌とした感じが面白い。当時としては科学的なヘロトドスの目線で解剖されてゆく神と神託、そして神話の解釈は、もう現代では不可能な感覚の文章で、うらやましいなと感じた。</p>

<hr>

<p>「ヒストリエ読んでる」「あーあのマンガ面白いよね！」「いやヘロトドスの方」「……へー」っていう会話ができたので満足した。</p>]]></content:encoded>
    </item>
    <item>
      <title>CSS、レイアウト、現在、未来</title>
      <link>https://hail2u.net/blog/webdesign/css-layout-present-future.html</link>
      <description>floatプロパティーで柔軟なレイアウトを行うことは可能だが、それには熟練と標準化されていない知識が必要になる。Flexible Box Layoutは標準化されていないという問題は解決するが、限られた矩形を基準にレイアウトをすること由来の独特のおまじないという熟練は必要になる（heightプロパティーの工夫）。レイアウトには様々なパターンがあり、Flexboxが解決するのはその一部分でしかない。</description>
      <category>Web Design</category>
      <guid isPermaLink="true">https://hail2u.net/blog/webdesign/css-layout-present-future.html</guid>
      <pubDate>Thu, 19 Nov 2015 10:35:00 +0900</pubDate>
      <content:encoded><![CDATA[<p><code>float</code>プロパティーで柔軟なレイアウトを行うことは可能だが、それには熟練と標準化されていない知識が必要になる。<a href="http://www.w3.org/TR/css-flexbox-1/">Flexible Box Layout</a>は標準化されていないという問題は解決するが、限られた矩形を基準にレイアウトをすること由来の独特のおまじないという熟練は必要になる（<code>height</code>プロパティーの工夫）。レイアウトには様々なパターンがあり、Flexboxが解決するのはその一部分でしかない。</p>

<p>問題はFlexboxの能力（とCSSにおける様々な単位の汎用性）が意外に高く、cross sizeが想定されているパターン以外にも流用できることだ。このことは<code>float</code>プロパティーが本来<em>フローコンテンツが回り込むように浮かせる</em>ものだったのにも関わらず、その汎用性から万能ツールのように扱われてしまったことと似ている。ウェブ開発者たちからもその<em>もっとすごいやつ</em>といった扱いになっていると言って良いだろう。</p>

<p>レイアウトのためのCSSとしては書きやすいことは確かであるし、困ったら標準仕様を参照すれば解決できるという点では問題はない。しかしその前にFlexboxを使うべきレイアウトなのかどうかはしっかりと考えるべきだろう。その上で実装を加味して本来は向いていなそうなレイアウトへFlexboxを利用するなら、ちょうど今<code>float</code>プロパティーの負債（それよりははるかに少ないが）を返しているのと同じことが将来起きる可能性は高い。</p>

<hr>

<p>CSSではそういったレイアウト手法をカテゴライズし、それぞれをモジュール化して解決しようとしてきた。Flexboxと同時にいくつか実装も始まっている。その結果はFlexboxの汎用性が圧倒するというもので、理想とは違う形になってしまった。</p>

<p>つまるところウェブ開発者の多くは標準化された万能ツールを求めているだけで、特に論理的なレイアウトの選択肢を求めているわけではなかったようだ。未来はFlexboxの更なる汎用化を仕様へ取り込むか仕様に合わせて他のレイアウト・モジュールの実装が進むかの2つしかないが、どうも<code>float</code>プロパティーを考えなしに使ってきた人の多さを考えると前者が優勢となりそうだ。</p>

<p>僕にはそういった万能ツールは思ったように機能しないのではないかと、モバイルOSのレイアウト・システムを見ていると感じる。型通りにやればうまくいくが、ちょっと変わったことをやろうとするとすぐうまくいかなくなる。標準仕様の策定に多くの人が関わる分、まだマシということにはなるかもしれないが、楽観するのは難しい。結局Stack Overflowを検索しないと……というのなら意味がない。</p>

<hr>

<p>現状ではできるだけ単純化した方法を使うことにしている。<code>float</code>プロパティーを使うならSassで抽象化してネガティブ・マージンやclearfixの存在を隠してレイアウト・モジュールのように振る舞わせるし、Flexboxを使うならAutoprefixerとコンテナー作りにSassで抽象化することを組み合わせる。そうでないなら<code>position</code>プロパティーでグリッドを構築し、そのサイズは<code>bottom: 0</code>や<code>right: 1.6rem</code>などの相対位置で決定する仕組みを使う。</p>

<p>どれをどう使うかはどちらかというとブラウザーという現実よりもレイアウトの論理的な面から決定する。そうすればその本当に上位互換のレイアウト・モジュールが実装された時にスムーズに移行できると考えるからだ。</p>]]></content:encoded>
    </item>
    <item>
      <title>Drawic v2.12.0</title>
      <link>https://hail2u.net/blog/webdesign/drawic-v2.12.0.html</link>
      <description>使い始めたWunderlistとMedium、そしてCircle CIのアイコンをDrawicへ追加した。ついでに今後よく必要になりそうなカギのアイコンも追加し、84個になった。今年中に100個は無理そうな感じになったが気長にやる。</description>
      <category>Web Design</category>
      <guid isPermaLink="true">https://hail2u.net/blog/webdesign/drawic-v2.12.0.html</guid>
      <pubDate>Tue, 17 Nov 2015 12:01:00 +0900</pubDate>
      <content:encoded><![CDATA[<figure>
<a href="https://hail2u.github.io/drawic/"><img alt="Circle CI, Lock, Medium, and Wunderlist" height="720" src="https://hail2u.net/images/blog/drawic-v2.12.0.png" width="1280"></a>
</figure>

<p>使い始めたWunderlistとMedium、そしてCircle CIのアイコンを<a href="https://hail2u.github.io/drawic/">Drawic</a>へ追加した。ついでに今後よく必要になりそうなカギのアイコンも追加し、84個になった。今年中に100個は無理そうな感じになったが気長にやる。</p>

<p>IFTTTやPaypalもそうだが、Mediumのような色のアレンジでシェイプを構成しているアイコンを単色化するのは難しい。Drawicでは暫定的に少し隙間を開けるという形で対処している。ということにしたので、それに従っていないDeliciousのアイコンはこれから直す。</p>]]></content:encoded>
    </item>
    <item>
      <title>白いアプリ・アイコン</title>
      <link>https://hail2u.net/blog/software/white-app-icons.html</link>
      <description>Let’s talk about white app iconsという記事を読んだ。タイトル読めばわかるけれども、iOS界隈を席巻しつつある白い背景のアイコンのことだ。ネイティブを尊重するのは良いが、もうちょっとその影響を考えた方が良いという話のようだ。</description>
      <category>Software</category>
      <guid isPermaLink="true">https://hail2u.net/blog/software/white-app-icons.html</guid>
      <pubDate>Sun, 15 Nov 2015 04:11:00 +0900</pubDate>
      <content:encoded><![CDATA[<p><a href="https://medium.com/swlh/let-s-talk-about-white-app-icons-ce2e83b9eb86">Let’s talk about white app icons</a>という記事を読んだ。タイトル読めばわかるけれども、iOS界隈を席巻しつつある白い背景のアイコンのことだ。ネイティブを尊重するのは良いが、もうちょっとその影響を考えた方が良いという話のようだ。</p>

<p>白いアイコンはiOSバンドル・アプリのそれらを見るとそれなりにうまくできてると思わなくもないのだけど、サード・パーティーのそれはバランスが悪いものも多い印象だ。<a href="https://itunes.apple.com/jp/app/messenger/id454638411?mt=8">Messenger</a>や<a href="https://itunes.apple.com/jp/app/googlenyusu-tian-qi-qing-bao/id913753848?mt=8">Googleニュース</a>のアイコンはかなりやばいと思う。あれにOKを出した神経を疑う。一方で<a href="https://itunes.apple.com/jp/app/google/id284815942?mt=8">Google</a>や<a href="https://itunes.apple.com/jp/app/jia-ji-bumanefowado-zi-dongde/id594145971?mt=8">マネーフォワード</a>は比較的まともに見える。</p>

<p>今のiOSを考えるとコーポレート・カラーで背景を塗って、それに白系でロゴを乗せるというかたちが一番安全なのではないだろうか。もちろんネイティブに寄せることで無視できない効果があることは認めるが、それはアイデンティティーの切り売りと言えるだろう。</p>

<hr>

<p>今のところ白いアプリ・アイコンで文句なしにかっこいいなと思うのは<a href="https://itunes.apple.com/jp/app/ready-steady-bang/id447588618?mt=8">Bang</a>だけだ。</p>]]></content:encoded>
    </item>
    <item>
      <title>BackJoyとの一週間</title>
      <link>https://hail2u.net/blog/gadget/one-week-with-backjoy.html</link>
      <description>近所にできたLOFTでBackJoyという骨盤をサポートして腰への負担を軽減する座布団を試してみた。ちょっと違和感はあったものの使用感はいきなり良かった。ただ即購入には至らず、レンタルがあるようなので試していた。ともかくハイエンドにしようとリリーフ・グリップというモデルにした。540円で2週間レンタルできる。</description>
      <category>Gadget</category>
      <guid isPermaLink="true">https://hail2u.net/blog/gadget/one-week-with-backjoy.html</guid>
      <pubDate>Thu, 12 Nov 2015 02:20:00 +0900</pubDate>
      <content:encoded><![CDATA[<figure>
<a href="http://www.amazon.co.jp/gp/product/B014IXOGSQ/ref=as_li_ss_il?ie=UTF8&amp;camp=247&amp;creative=7399&amp;creativeASIN=B014IXOGSQ&amp;linkCode=as2&amp;tag=hail2unet-22"><img alt="BackJoy(バックジョイ) 骨盤サポートシート リリーフ グリップ レギュラーサイズ ブラック【正規品】" height="500" src="https://images-fe.ssl-images-amazon.com/images/I/51RCr2N8pdL.jpg" width="500"></a>
</figure>

<p>近所にできたLOFTでBackJoyという骨盤をサポートして腰への負担を軽減する座布団を試してみた。ちょっと違和感はあったものの使用感はいきなり良かった。ただ即購入には至らず、レンタルがあるようなので試していた。ともかくハイエンドにしようと<a href="http://www.amazon.co.jp/gp/product/B014IXOGSQ/ref=as_li_ss_il?ie=UTF8&amp;camp=247&amp;creative=7399&amp;creativeASIN=B014IXOGSQ&amp;linkCode=as2&amp;tag=hail2unet-22">リリーフ・グリップ</a>というモデルにした。540円で2週間レンタルできる。</p>

<section>
<h2>使用感</h2>

<p>いきなり座ってみても確かに姿勢が良くなる。深く座って太ももを下げるとグッとお尻の方が持ち上がり、前傾になってていても猫背度が大きく減る。劇的にグイグイサポートされるというわけではなく、骨の位置を調節してくれるという形で、負担は太ももの圧迫感くらいだろう。椅子との相性はある程度あるが、座面の硬さはあまり選ばないので、椅子の高さを調節できれば大きな問題ではなさそうだ。</p>

<p>最初は30分くらいで変な感じになったが、少し慣れてくると1時間くらいは座っていられた。ただ落ち着かないので車の運転中にというのは無理がありそうだ。さすがに1時間を超えるくらいになると太ももが辛くなるのと、おしりがちょっと痛くなる。お尻が痛くなるのはもっと柔らかいポスチャー・プラスだとまた違うのかもしれない。</p>

<p>また太ももが下がるものの骨盤が前に来る関係で、パンツの前ポケットに入っているものが圧迫される。大きいスマホとかはまずそうだ。</p>
</section>

<section>
<h2>リリーフ・グリップの疑問</h2>

<p>本家ウェブサイトによると、どうも日本で売ってるリリーフ・グリップと新発売のテック・ジェル相当の製品が存在しないことがわかった。日本独自企画のものなのだろうか。それとも高温多湿な日本向けのスペシャル・バージョンということなのだろうか。</p>

<p>この辺りがちょっと判断がつかない。</p>
</section>

<section>
<h2>使用感以外について</h2>

<p>送られてきたパッケージは、防水加工がしてあるただの紙袋で、製品がそのまま裸で入っていた。ビニールもかかってなくて簡易包装どころではないそっけなさだ。同梱の説明書や解説書、DVDのどれもがクオリティーに欠けており不安しかない。ウェブサイトでは60kgがミニとレギュラーの境目だったが、同梱の解説書では55kgになっており情報がずれていて更に不安が増した。</p>

<p>製品は独特の香りがしていて、ちょっと臭い。半日くらい陰干しした方が良いかもしれない。これはレンタル品だからというだけなのかもしれない。ただしリリーフ・グリップの場合は洗えないため、長く使うとこのように臭くなる可能性はありそうだ。</p>

<p>また、公式ウェブサイトが情報商材臭しかせず、本家本元のウェブサイトを参照しようにもIPアドレスでリダイレクトされるためプロクシーでも通さない限り見ることができないのはかなりマイナスだ。ウェブサイトの中身自体もプロダクトの使い方を色々な形で書いているだけで、どのようなものなのかはかなりアバウトでいまいちわからず、製品ごとの差異も骨盤サポートというメイン機能においてはわからない。特にないということなのだろうけど、それが確信できない。</p>
</section>

<hr>

<p>製品としてはかなり見るべきところはあり、体験としてもなかなかのものだった。しかし日本での販売元を信用しようという気にまったくなれないため、少なくとも本家で扱っていない（ように見える）リリーフ・グリップを買うことはなさそうだ。もう少しレンタル期間があるが、いろいろあったら困るので早めに返却しようと思う。</p>

<p>ただ良さはなんとなくわかったので、もし買うとしたら本家でも普通に扱っているポスチャー・プラスにしようかなと考えている。蒸れるというのは気になるところだが、もう一回レンタルすれば良いかなと考えている。ただ<a href="https://twitter.com/_tsmd/status/663006029198692354">座ってるとずれる</a>という話を聞いてうーん……となっている。</p>

<p>というところでタイミングよくクローズアップ現代で座ることの悪影響についての回（11/11放送）があった。そのためまずはスタンディング・デスクかなという気になりつつある。</p>]]></content:encoded>
    </item>
    <item>
      <title>ex単位のテスト</title>
      <link>https://hail2u.net/blog/webdesign/testing-ex-unit.html</link>
      <description>@kotarokに「ex単位とかうまく動く？」と聞かれたので、100倍してわかりやすくするテスト・ページを作成した。想定通りうまく動いてくれている。例えばSource Sans Proはx-heightが480とフォント・ファイルそのもので設定されており（FontForgeなどで確認することができる）、フォント・サイズが16pxとすると100exは16px * 480 / 1000 * 100となり768pxに理論上なることになるが、実際に（ほぼ）そうなっている。</description>
      <category>Web Design</category>
      <guid isPermaLink="true">https://hail2u.net/blog/webdesign/testing-ex-unit.html</guid>
      <pubDate>Tue, 10 Nov 2015 14:30:00 +0900</pubDate>
      <content:encoded><![CDATA[<p><a href="https://twitter.com/kotarok/status/663603369295015937">@kotarokに「<code>ex</code>単位とかうまく動く？」</a>と聞かれたので、100倍してわかりやすくするテスト・ページを作成した。想定通りうまく動いてくれている。例えばSource Sans Proはx-heightが480とフォント・ファイルそのもので設定されており（FontForgeなどで確認することができる）、フォント・サイズが16pxとすると<code>100ex</code>は<code>16px * 480 / 1000 * 100</code>となり<code>768px</code>に理論上なることになるが、実際に（ほぼ）そうなっている。</p>

<p>See also: <a href="https://hail2u.net/pub/test/645.html">Test ex Unit</a></p>

<p>基準は<code>Arial</code>とした。赤いバーが左に出ているGeorgiaやCourier New、そしてSource系はArialよりx-heightが低いことになる。逆にVerdanaやImpactは右に出ているのでx-heightが高いことになる。同時にChrome 46やFirefox 42、Internet Explorer 11では既に<code>ex</code>単位が正しい形で実装されていることもわかる。</p>

<p>このテスト・ページでは<code>li</code>要素にインラインでフォントを指定しつつ青くし、幅を<code>100ex</code>とすることでx-heightに応じて長さが変わるようになっている。そしてその<em>下</em>に赤でArialを指定した<code>100ex</code>の長さのブロックを擬似要素で作成することでx-heightが低い場合に差がわかるようにしている。また<em>上</em>に赤でArialを指定した<code>calc(100% - 100ex)</code>の長さのブロックを擬似要素で作ることで、x-heightが高い場合にも差がわかるようになっている。</p>

<hr>

<p>赤青鉛筆欲しい。</p>

<p>ではなくて「<code>ex</code>単位とか何に使うんだ？」という点だ。</p>

<p>僕は<code>line-height: calc(1.25em + 1ex)</code>（要調整）などはなかなかいい使い道なんじゃないかなと考えている。x-heightにもよって（も）行間の最適値は変わるので、<code>ex</code>単位を使うことでよしなに調節されることが期待できるはずだ。</p>

<p>ウェブ・フォントが問答無用で使われるかどうかわからない時代になった（コンテント・ブロッカーなど）ため、特定のフォントを想定して行間を決定するのは危険になりつつあるとも考えられる。そうなるとこのような利用の仕方はこれから出てくるだろう。</p>]]></content:encoded>
    </item>
    <item>
      <title>リンク先が訪問済みかどうかのCSSによる表示</title>
      <link>https://hail2u.net/blog/webdesign/show-visited-status-with-css.html</link>
      <description>DuckDuckGoでは、検索結果に出てきたページが訪問済みかどうかをわかりやすくアイコンで表示してくれる。Googleではトリッキーなことはせずに、色を変えるだけだ。もちろん色を変えるのが簡単だが、色を増やさずに訪問済みかどうかを示すことも不可能ではないようだ。まずはテスト実装ということで擬似要素がユニバーサル・セレクターにはマッチしないことを利用して考えることにした。</description>
      <category>Web Design</category>
      <guid isPermaLink="true">https://hail2u.net/blog/webdesign/show-visited-status-with-css.html</guid>
      <pubDate>Mon, 09 Nov 2015 15:14:00 +0900</pubDate>
      <content:encoded><![CDATA[<p><a href="https://duckduckgo.com/">DuckDuckGo</a>では、検索結果に出てきたページが訪問済みかどうかをわかりやすくアイコンで表示してくれる。<a href="https://www.google.com/">Google</a>ではトリッキーなことはせずに、色を変えるだけだ。もちろん色を変えるのが簡単だが、色を増やさずに訪問済みかどうかを示すことも不可能ではないようだ。まずはテスト実装ということで擬似要素がユニバーサル・セレクターにはマッチしないことを利用して考えることにした。</p>

<p>See also: <a href="https://hail2u.net/pub/test/644.html">Show :visited Status</a></p>

<p>デモ・ページでは訪問済みのリンクであった場合に「訪問済み」という文字列を赤で表示するようになっている。「訪問済み」という文字列の代わりにアイコン・フォントを使えばこのインジケーターをDuckDuckGoのそれに似たようなものにできるのではないかと思う。その場合は「訪問済み」とかいう妙な文字列をクローラーに拾われなくなり、より良い実装となりうる。</p>

<p><code>:visited</code>擬似クラスでは特定のCSSプロパティーしか利用できない。仕組みそのものは単純だが、いくつかCSSの独特の仕組みを利用しており、実装は少しややこしくなる。</p>

<ol>
<li><code>a</code>要素の<code>color</code>プロパティーを背景色と同じにする</li>
<li><code>a:visited</code>擬似クラスの<code>color</code>プロパティーでインジケーターの前景色を指定する</li>
<li><code>a:before</code>擬似要素でインジケーターになる文字列を仕込む</li>
<li><code>a &gt; *</code>の<code>color</code>プロパティーでリンクの前景色を指定する</li>
</ol>

<p>本来は1か2で指定した前景色がすべての子要素へ適用されることになるが、実際にリンクを張った文字列の前景色は4での指定により上書きされる。ただし4のセレクターは擬似要素にマッチしないので、擬似要素だけは1か2での指定が適用される。ということで訪問済みの場合のみ文字列が見えるようになるという仕組みだ。</p>

<pre><code>&lt;li&gt;
  &lt;a href=&quot;https://example.com/&quot;&gt;
    &lt;span&gt;Example&lt;/span&gt;
  &lt;/a&gt;
&lt;/li&gt;
</code></pre>

<p>デモ・ページではこのようなマークアップに依存している。必要な条件を単純化すると<code>a</code>要素の直下がなんらかの要素ですべて括られていれば良いということになる。つまり以下のようなマークアップでもうまくいく。</p>

<pre><code>&lt;a href=&quot;https://example.com/&quot;&gt;
  &lt;section&gt;
    &lt;h1&gt;Example&lt;/h1&gt;
  &lt;/section&gt;
&lt;/a&gt;
</code></pre>

<p>利用を想定している箇所はこのようなセクション全体にリンクを張るパターンなので、概ね問題なさそうだ。</p>

<hr>

<p>訪問済みかどうかの表示はユーザーの不安感を煽るとも考えられる。多用は……というよりも、ユーザーのメリットが明らかでない場合は利用するべきではないだろう。しかしながらいざ必要となった時にアイディアがまったくないというのも芸がないので、このような工夫は常に数個ストックしておきたい。</p>]]></content:encoded>
    </item>
    <item>
      <title>Dropboxの(S)CSSスタイル・ガイドの所感</title>
      <link>https://hail2u.net/blog/webdesign/first-impression-of-dropbox-s-css-style-guide.html</link>
      <description>Dropbox社内のスタイル・ガイドを読んでいた。スタイル・ガイドとなっているがCSSのコーディング規約の方のスタイル・ガイドだ。最近のシンプル回帰の傾向と違い、かなり厳しいようだ。完全に守ってるとしたらかなりすごい。</description>
      <category>Web Design</category>
      <guid isPermaLink="true">https://hail2u.net/blog/webdesign/first-impression-of-dropbox-s-css-style-guide.html</guid>
      <pubDate>Sun, 08 Nov 2015 02:56:00 +0900</pubDate>
      <content:encoded><![CDATA[<p><a href="https://github.com/dropbox/css-style-guide">Dropbox社内のスタイル・ガイド</a>を読んでいた。スタイル・ガイドとなっているがCSSのコーディング規約の方のスタイル・ガイドだ。最近のシンプル回帰の傾向と違い、かなり厳しいようだ。完全に守ってるとしたらかなりすごい。</p>

<p>特に特徴的だったのはCSSプロパティーの記述順だろう。近頃は「もう面倒なのでアルファベット順で……」という規約が多い。対して<a href="https://github.com/dropbox/css-style-guide#rule-ordering">Dropboxのそれ</a>はいくつかに大きくジャンル分けして記述するようになっているようだ。そのジャンルの中では順不同なのも面白い。そのカテゴリ分けもレイアウト、インラインの見た目、ブロックの見た目、その他と妥当に分かれている。</p>

<p>コンポーネント分けのパターンも考慮すると、多くはその分けられたカテゴリのどれかひとつだけを使うようにクラス分けされるはずなので、実質意味がないようにも見えるところに興味を持った。複数のカテゴリのプロパティーが混ざったらそのクラスはおかしいというような判断も下せるのではないかと推測している。</p>

<p>4スペースでのインデントは好みかと思うが、ネストする機会が少ないことを考えると問題なさそうだ。Markdownが界隈を完全に制圧したためか、4スペース・インデント派が地味にマジョリティーと化している気がする。</p>

<p>ただ<code>margin-top</code>プロパティーは使わないという点はちょっとなんかこう冷静になれないところがある。マージンの相殺も理解できない人はCSSを書くべきじゃないというようなスタンスでいたい。</p>

<p>それはともかく全体的に見るべきところは多い。ちょっと厳しめのコーディング規約を課したいと考えている場合は大いに参考にできそうだ。</p>

<hr>

<p>スタイル・ガイドという言葉が2通りの使い方をされている現状はどうにかならないかな。</p>]]></content:encoded>
    </item>
    <item>
      <title>夢</title>
      <link>https://hail2u.net/blog/misc/dreaming-20151101.html</link>
      <description>冬服を衣装箱から出したところ、去年買ったお気に入りのセーターが虫食いでボロボロになっていた。どうにかならないかと穴を調べるために着てみたら、穴の方が大きいくらいだった。どうしようかなと着たまま呆然としていたらいきなり現れた見知らぬ人に「グランジだ！オシャレ！」って言われたので、調子に乗って玄関を出たところで目が覚める。</description>
      <category>Misc.</category>
      <guid isPermaLink="true">https://hail2u.net/blog/misc/dreaming-20151101.html</guid>
      <pubDate>Sat, 07 Nov 2015 12:24:00 +0900</pubDate>
      <content:encoded><![CDATA[<p>冬服を衣装箱から出したところ、去年買ったお気に入りのセーターが虫食いでボロボロになっていた。どうにかならないかと穴を調べるために着てみたら、穴の方が大きいくらいだった。どうしようかなと着たまま呆然としていたらいきなり現れた見知らぬ人に「グランジだ！オシャレ！」って言われたので、調子に乗って玄関を出たところで目が覚める。</p>

<p>もう1着セーターが欲しい。サムホールの開いてるとてもお高いセーター買っちゃいなよっていう悪魔の囁きとシーズンをまたいで2年くらい戦っているがそろそろ負けそうだ。去年はそれよりも前から欲しかったセーターを優先するという強い心があったが、今年はない。しかも近所に扱ってる店ができてしまったので更に厳しそうだ。頑張ろう。</p>]]></content:encoded>
    </item>
    <item>
      <title>ドットで始まるファイルのWindowsでの作成方法</title>
      <link>https://hail2u.net/blog/software/creating-dot-start-file-in-windows.html</link>
      <description>チャットの類いを見ているとたまに「Windowsでドットで始まるファイルが作れないんだけど」というような発言を見かけることが多くなった。Windows 10のおかげかSurfaceの好調さか、ウェブ開発でWindowsを使っている人が増えつつあるようで、こういう質問が出てくるのかもしれない。簡単に言うと.filename.と最後にもドットを付けると、それが削除されてドット始まりのファイルがWindowsでも簡単に作成できる。</description>
      <category>Software</category>
      <guid isPermaLink="true">https://hail2u.net/blog/software/creating-dot-start-file-in-windows.html</guid>
      <pubDate>Fri, 06 Nov 2015 13:31:00 +0900</pubDate>
      <content:encoded><![CDATA[<figure>
<a href="https://hail2u.net/images/blog/creating-dot-start-file-in-windows.png"><img alt="Windowsでドット始まりのファイルを作成しようとすると、拡張子だけとみなされて「ファイル名を入力してください。」と丁寧に叱られる" height="720" src="https://hail2u.net/images/blog/creating-dot-start-file-in-windows.png" width="1280"></a>
</figure>

<p>チャットの類いを見ているとたまに「Windowsでドットで始まるファイルが作れないんだけど」というような発言を見かけることが多くなった。Windows 10のおかげかSurfaceの好調さか、ウェブ開発でWindowsを使っている人が増えつつあるようで、こういう質問が出てくるのかもしれない。簡単に言うと<code>.filename.</code>と最後にもドットを付けると、それが削除されてドット始まりのファイルがWindowsでも簡単に作成できる。</p>

<p>この手法はたいていのケースで利用できる。最後に拡張子の変更を警告するダイアログが出るが、それはだいたいそうなので気にならないだろう。</p>

<figure>
<img alt="Windowsにより.bashrc.というファイル名が.bashrcへ自動的に補正される様子" height="360" src="https://hail2u.net/images/blog/creating-bashrc-in-windows.gif" width="640">
<figcaption><code>.bashrc.</code> will become <code>.bashrc</code></figcaption>
</figure>

<hr>

<p>これはもう知っているか知らないかの問題にすぎないので、知っていると便利だぞ、という話だ。かなり前のWindowsからこの手法でいけたと思う。僕の記憶が定かならばWindows Meでも大丈夫だったはずだ。ちゃんと広まって「コマンド・プロンプトを開いて<code>ren</code>コマンドを使うとできるよ」などと言う人が減ると良いなと思う。</p>

<p>この答えは間違ってはいないのだが、「すみません、コマンド・プロンプトってなんですか？」とか「このフォルダーでコマンド・プロンプトを開くにはどうすれば良いですか？」（<kbd>Shift</kbd>キーを押しながら右クリックして、コマンド ウィンドウをここで開くを選択する）と更に聞かれてしまう。最悪の場合「コマンド・プロンプトで別ドライブに移動するにはどうすれば良いんですか？」などといった別の答えるのが面倒くさそうな質問に派生することもある。</p>

<hr>

<p>そもそもドット始まりのファイルみたいな運用でカバーみ……ということを書くとこんがり燃えそう。</p>]]></content:encoded>
    </item>
    <item>
      <title>HTTPSへの移行</title>
      <link>https://hail2u.net/</link>
      <pubDate>Sun, 1 Nov 2015 00:00:00 +0900</pubDate>
      <guid isPermaLink="true">https://hail2u.net/</guid>
      <description><![CDATA[<p>このウェブサイトがHTTPSで提供されるようになりました。既存のHTTPであるURLからはHSTSを利用してクライアント・サイドでリダイレクトされるようになっています。</p>]]></description>
    </item>
    <item>
      <title>Mediumへの配信</title>
      <link>https://medium.com/muidem-no-ten-u2liah</link>
      <pubDate>Fri, 23 Oct 2015 05:07:39 +0900</pubDate>
      <guid isPermaLink="true">https://medium.com/muidem-no-ten-u2liah</guid>
      <description><![CDATA[<p>このウェブサイトへの投稿を<a href="https://medium.com/muidem-no-ten-u2liah">Mediumのpublication page</a>へも同時に配信するようにしました。</p>]]></description>
    </item>
    <item>
      <title>“マークアップ”するということ ～ HTML5勧告に寄せて ～</title>
      <link>https://hail2u.net/documents/markup.html</link>
      <pubDate>Sat, 27 Dec 2014 21:02:53 +0900</pubDate>
      <guid isPermaLink="true">https://hail2u.net/documents/markup.html</guid>
      <description><![CDATA[<p>HTMLを適切な要素を使って書いていくことは実はそれほど難しくはない。しかし過剰に要素を使わずに、かつスタイリングすることも意識して、と適切に“マークアップ”するのはなかなかの修練を必要とする。いったい“マークアップ”するということはどういうことなのだろうか、そしてどのような思考の元に行えば良いのだろうか。</p>]]></description>
    </item>
    <item>
      <title>ウェブ・タイポグラフィーのベスト・プラクティス</title>
      <link>https://hail2u.net/documents/web-typography-best-practices.html</link>
      <pubDate>Sun, 28 Sep 2014 00:51:35 +0900</pubDate>
      <guid isPermaLink="true">https://hail2u.net/documents/web-typography-best-practices.html</guid>
      <description><![CDATA[<p><a href="http://www.smashingmagazine.com/2013/05/17/typographic-design-patterns-practices-case-study-2013/">Smashing Magazineによるウェブサイトのタイポグラフィーについての調査</a>をわかりやすくまとめた<a href="http://bootstrapbay.com/blog/web-typography-best-practices/">The All-Inclusive Guide to Web Typography Best Practices</a>の日本語訳です。ベスト・プラクティスになりうる部分のみコンパクトに抽出された参考になる文書だと思います。</p>]]></description>
    </item>
    <item>
      <title>Twitterアカウント</title>
      <link>https://twitter.com/hail2unet</link>
      <pubDate>Thu, 19 Jun 2014 07:15:12 +0900</pubDate>
      <guid isPermaLink="true">https://twitter.com/hail2unet</guid>
      <description><![CDATA[<p>更新情報やブログに公開された記事の他、重要なお知らせを通知するためのTwitterアカウントを作成しました。今まで個人のアカウントでツイートされていたそれらは、今後こちらで行われます。</p>]]></description>
    </item>
    <lastBuildDate>Sat, 21 Nov 2015 16:43:00 +0900</lastBuildDate>
  </channel>
</rss>
