<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0"
  xml:lang="ja"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:creativeCommons="http://backend.userland.com/creativeCommonsRssModule"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Weblog - Hail2u.net</title>
    <link>http://hail2u.net/blog/</link>
    <description>ウェブ制作やウェブ標準の話題が中心ですが、それに限らず備忘録や日々の記録までを含めることで、10年以上続けることができたウェブログです。Blosxomを使って作られています。</description>
    <language>ja</language>
    <managingEditor>hail2u@gmail.com (Kyo Nagashima)</managingEditor>
    <lastBuildDate>Wed, 21 Oct 2015 09:22:15 +0900</lastBuildDate>
    <generator>blosxom v2.1.2+dev</generator>
    <atom:link rel="self" href="http://hail2u.net/blog/feed"/>
    <atom:link rel="hub" href="https://pubsubhubbub.appspot.com/"/>
    <creativeCommons:license>http://creativecommons.org/licenses/by-nc/3.0/</creativeCommons:license>


    <item>
      <title>遅延読み込み用のぼやけた画像</title>
      <link>http://hail2u.net/blog/webdesign/blurred-image-for-lazyload.html</link>
      <description>Mediumでとある記事を高速にスクロールして読んでいたら、さりげなく画像を遅延読み込みしていることを知った。読み込み発火のタイミングがうまいのかあまり遅延読み込みの存在を感じさせないのもすごいと思ったが、プレースホルダ―画像の実装方法が良さそうだった。単純に元の画像を幅30px程度まで小さくしてそれをブラウザーにリサイズさせることでぼやけた画像をプレースホルダ―として表示しているだけだが、十分に機能していそうで目から鱗だった。</description>
      <category>Web Design</category>
      <guid isPermaLink="true">http://hail2u.net/blog/webdesign/blurred-image-for-lazyload.html</guid>
      <pubDate>Wed, 21 Oct 2015 09:20:00 +0900</pubDate>
      <content:encoded><![CDATA[
<figure >
  <a href="http://hail2u.net/images/blog/blurred-image-for-lazyload.png"><img alt="617バイトのぼやけたプレースホルダ―画像" src="http://hail2u.net/images/blog/blurred-image-for-lazyload.png"></a>
</figure>

<p><a href="https://medium.com/">Medium</a>でとある記事を高速にスクロールして読んでいたら、さりげなく画像を遅延読み込みしていることを知った。読み込み発火のタイミングがうまいのかあまり遅延読み込みの存在を感じさせないのもすごいと思ったが、プレースホルダ―画像の実装方法が良さそうだった。単純に元の画像を幅<code>30px</code>程度まで小さくしてそれをブラウザーにリサイズさせることでぼやけた画像をプレースホルダ―として表示しているだけだが、十分に機能していそうで目から鱗だった。</p>

<p>画像の遅延読み込みはなかなか曲者で、読み込むタイミングやプレースホルダ―としている画像が悪いと大きくユーザーにストレスを与える。プレースホルダ―でよく使われるローディング画像は読み込み中のインジケーターではあるが、同時に何か遅いことをやっていますというネガティブな印象も与えてしまう。ユーザーはローディング画像を見るとスクロールを止めなくてはならないのかと感じることもあるだろう。</p>

<p>Mediumのぼやけた画像はローディング画像のような強い意味を持たないので、ユーザーは無視することができる。そういう点でも優れているが、クオリティなどを考えなくても良いので作りやすいという点も優れている。問題は画像ごとに作成される点だが、Mediumの構成(HTTPS + SPDY/3.1)では無視できそうだ。</p>

<p><a href="https://twitter.com/myakura">@myakura</a>に<a href="https://code.facebook.com/posts/991252547593574/the-technology-behind-preview-photos/">Facebookでも同じ手法で体感速度の向上を狙っていること</a>を教えてもらった。実際にはかなり複雑なことを考えた結果のようだ。どちらが先かはわからないが、想像以上にリーズナブルな手法ではありそうだ。</p>

<hr>

<p>あまり遅延読み込みに良い思い出はないのだけど、必要な機会があったらこの手法を真似て実装したい。</p>]]></content:encoded>
    </item>

    <item>
      <title>NovaフォントとProフォント他</title>
      <link>http://hail2u.net/blog/software/nova-fonts-pro-fonts-and-others-on-win10.html</link>
      <description>Windows 10ではデフォルトでもいくつか新しいフォントが加わっているが、欧米向けには特別に新たなフォントが提供されている。それらはオプション機能から機能の追加を選択し、ヨーロッパ各国語追加フォントを探してインストールすると使えるようになる。</description>
      <category>Software</category>
      <guid isPermaLink="true">http://hail2u.net/blog/software/nova-fonts-pro-fonts-and-others-on-win10.html</guid>
      <pubDate>Tue, 20 Oct 2015 01:35:00 +0900</pubDate>
      <content:encoded><![CDATA[
<figure >
  <a href="http://hail2u.net/images/blog/nova-fonts-pro-fonts-and-others-on-win10.gif"><img alt="Arial Nova/Georgia Pro/Gill Sans Nova/Neue Haas Grotesk/Rockwell Nova/Verdana Pro" src="http://hail2u.net/images/blog/nova-fonts-pro-fonts-and-others-on-win10.gif"></a>
</figure>

<p>Windows 10ではデフォルトでもいくつか新しいフォントが加わっているが、欧米向けには特別に新たなフォントが提供されている。それらはオプション機能から機能の追加を選択し、<em>ヨーロッパ各国語追加フォント</em>を探してインストールすると使えるようになる。</p>

<ul>
<li style="font-family: Arial Nova, sans-serif">Arial Nova</li>
<li style="font-family: Georgia Pro, serif">Georgia Pro</li>
<li style="font-family: Gill Sans Nova, sans-serif">Gill Sans Nova</li>
<li style="font-family: Neue Haas Grotesk Text Pro, sans-serif">Neue Haas Grotesk</li>
<li style="font-family: Rockwell Nova, serif">Rockwell Nova</li>
<li style="font-family: Verdana Pro, sans-serif">Verdana Pro</li>
</ul>

<p>追加されるのは以上の6ファミリーだ。Novaフォントはウェイトの充実はあるものの正直期待外れで、Neue Haas Groteskも高DPI環境下なら……という程度であまり魅力的ではない。</p>

<p>その一方でGeorgia ProとVerdana Proはかなりのクオリティに感じる。Georgia ProはGeorgiaが元々優れていたためあまり違いは感じないが、見やすさを失わずにヒゲ（セリフ）が鮮明になっている。Verdana Proでも細かいところの修正にとどまっているが、特筆すべきはCondensedバージョンの追加だろう。</p>

<figure>
  <a href="http://hail2u.net/images/blog/verdana-pro-condensed.png"><img alt="Verdanaの読みやすさはそのまま細身に" src="http://hail2u.net/images/blog/verdana-pro-condensed.png"></a>
  <figcaption>Verdana Pro Condensed</figcaption>
</figure>

<p>近年のディスプレイ解像度に対してはともすれば大振りすぎるVerdanaはその役目を終えてしまったような印象ではあるが、Condensedバージョンなら……と少し感じる。またボールドも均一な太さになり、使いやすくなった。</p>

<hr>

<p>ウェブでもダメ元で<code>font-family: Georgia Pro, Georgia, serif</code>とするのは良さそうだ。一方でArialの代わりにArial Novaとしたり、Helvetica対抗としてNeue Haas Groteskを追加するのは勧められない。</p>]]></content:encoded>
    </item>

    <item>
      <title>VimへのEditorConfigの導入</title>
      <link>http://hail2u.net/blog/software/installing-editorconfig-to-vim.html</link>
      <description>他人のリポジトリーをいじるときだけEditorConfigを使うような仕組みにしていたが、3回ミスして迷惑をかけたので、諦めて常時使用することにした。バイナリーをパスを通ったところに入れて、ediorconfig-vimをインストール……ではすんなり環境を構築できなかった。どうやらWindowsでset shell=shかつset shellslashしてる場合でだけで起こるようだ。</description>
      <category>Software</category>
      <guid isPermaLink="true">http://hail2u.net/blog/software/installing-editorconfig-to-vim.html</guid>
      <pubDate>Mon, 19 Oct 2015 13:32:00 +0900</pubDate>
      <content:encoded><![CDATA[
<p>他人のリポジトリーをいじるときだけ<a href="http://editorconfig.org/">EditorConfig</a>を使うような仕組みにしていたが、3回ミスして迷惑をかけたので、諦めて常時使用することにした。<a href="http://sourceforge.net/projects/editorconfig/">バイナリー</a>をパスを通ったところに入れて、<a href="https://github.com/editorconfig/editorconfig-vim">ediorconfig-vim</a>をインストール……ではすんなり環境を構築できなかった。どうやらWindowsで<code>set shell=sh</code>かつ<code>set shellslash</code>してる場合でだけで起こるようだ。</p>

<p>うまく動かない理由はeditorconfig-vimが内部で<code>setlocal noshellslash</code>しており、それにより<code>sh.exe</code>が解釈できない形（バックスラッシュによるパス区切り）でファイルのパスが渡されることによるものだった。該当箇所をコメントアウトするだけで動くことが確認できたので、イシューを投げておいた。その後テスト環境ないのでPR欲しいと言われたため、Vundleのコードを参考にして直したものも投げておいた。取り込まれれば直ると思う。</p>

<p>また<code>:vimgrep</code>を使うと隠しバッファーとして開いたファイルのすべてでEditorConfigの設定読み込みが行われてしまうので死ぬほど遅くなる。普段は<code>:vimgrep</code>を使わない（<a href="http://hail2u.net/blog/software/using-git-grep-with-vim.html"><code>git grep</code></a>を使っている）ので問題ないが、たまに使おうとするとものすごい遅い。</p>

<pre><code >:noautocmd vimgrep /foo/ **/*
</code></pre>

<p>プラグインを変えるのは影響が大きそうなので、能動的に<code>:noautocmd</code>を付けることで回避するのがよさそうだ。</p>

<hr>

<p>ちゃんと動くまでに大変だったが、ちゃんと動くようになったので、これでもうミスはしないはずだ。ごめんなさい。</p>]]></content:encoded>
    </item>

    <item>
      <title>姓名ジェネレーター</title>
      <link>http://hail2u.net/blog/coding/namegen.html</link>
      <description>必要に迫られてランダムな名前を生成するJavaScriptを書いた。姓が100通り、名が男女50通りずつで、ランダムに組み合わされる。前田さくら、大野亮太、岩崎健太、伊藤悠斗、佐藤智子。</description>
      <category>Coding</category>
      <guid isPermaLink="true">http://hail2u.net/blog/coding/namegen.html</guid>
      <pubDate>Sun, 18 Oct 2015 18:46:00 +0900</pubDate>
      <content:encoded><![CDATA[
<p>必要に迫られて<a href="https://gist.github.com/hail2u/c268787ded82236ecfcf">ランダムな名前を生成するJavaScript</a>を書いた。姓が100通り、名が男女50通りずつで、ランダムに組み合わされる。前田さくら、大野亮太、岩崎健太、伊藤悠斗、佐藤智子。</p>

<p>実際の目標は与えられた任意の姓名へそのフリガナを推測させるというものだった。ジェネレーターを作ったところで、メジャーな姓名なので容易に推測できそうみたいなことに気付いたのだが、難読姓名のジェネレーターはそれはそれで難しそうだ。ということで準備時点で詰まってしまった。</p>

<p>何かには使えるだろうということで記事にしておく。</p>]]></content:encoded>
    </item>

    <item>
      <title>CSSやJSの分割</title>
      <link>http://hail2u.net/blog/webdesign/split-css-and-js.html</link>
      <description>HTTPS化したらやろうと思っていた、CSSファイルとJavaScriptファイルの分割を別ドメインの方で試していた。果たして聞いていたように効果があるのか……と思ったが、利用しているファイルが少なくてよくわからない。</description>
      <category>Web Design</category>
      <guid isPermaLink="true">http://hail2u.net/blog/webdesign/split-css-and-js.html</guid>
      <pubDate>Sat, 17 Oct 2015 02:17:00 +0900</pubDate>
      <content:encoded><![CDATA[
<figure >
  <a href="http://hail2u.net/images/blog/split-css-and-js.png"><img alt="HTTPリクエストがスパパパッと並行に走っている様子" src="http://hail2u.net/images/blog/split-css-and-js.png"></a>
</figure>

<p>HTTPS化したらやろうと思っていた、CSSファイルとJavaScriptファイルの分割を別ドメインの方で試していた。果たして聞いていたように効果があるのか……と思ったが、利用しているファイルが少なくてよくわからない。</p>

<p>CSSファイルのダウンロードが終わってからその中で使われている画像を読み始めるとなると遅いので、画像のプリロードを大量に仕込むようなことも同時に行うと良いのかもしれない。全部やろうとするとHTMLが肥大化し、保守性が落ちるのでクリティカル・レンダリング・パスで使われている画像のみなどと制限を付けるべきだろう。</p>

<hr>

<p>実証実験をそのうちちゃんとやろう。HTTP/2はともかくHTTPSのテスト環境の作り方が皆目見当もつかないので先は長そう。</p>]]></content:encoded>
    </item>

    <item>
      <title>図書館とか</title>
      <link>http://hail2u.net/blog/misc/on-my-local-library.html</link>
      <description>噂の図書館は地元のため、ちょくちょく行っている。行くようになった。色々に色々と書かれていて、それに対して思うところはあるもののうまく書けそうもない。原子力発電所の地元に住んでいる人たちは東日本大震災以降ずっとこんな気持ちだったのかなと少し感じる。もちろんスケールはまったく違うと思うが。</description>
      <category>Misc.</category>
      <guid isPermaLink="true">http://hail2u.net/blog/misc/on-my-local-library.html</guid>
      <pubDate>Fri, 16 Oct 2015 11:20:00 +0900</pubDate>
      <content:encoded><![CDATA[
<p>噂の図書館は地元のため、ちょくちょく行っている。行くようになった。色々に色々と書かれていて、それに対して思うところはあるもののうまく書けそうもない。原子力発電所の地元に住んでいる人たちは東日本大震災以降ずっとこんな気持ちだったのかなと少し感じる。もちろんスケールはまったく違うと思うが。</p>

<p>だから書くな！とかいう話ではもちろんない。気をつかって書け！でもない。しかしTwitterででもやれというレベルの伝聞推定の記事が紙媒体で散見されるのはなかなか受け入れがたい。</p>

<p>とにかく来月の11/15が市長選挙である。これ（やもうすぐ開業するららぽーと海老名を中心とした北側の開発計画）を進めた市長について市民の評価が問われることは知っておいてほしいかなと感じる。</p>

<hr>

<p>公式ウェブサイトの<a href="https://ebina.city-library.jp/library/en">英語バージョン</a>が90%英語じゃないのはさっさと直した方が良い。これじゃせいぜい地図を探せる（Accessが伝わるのか知らないけど）くらいで、それ以外はGoogle翻訳を使わせた方がずっと良い。</p>]]></content:encoded>
    </item>

    <item>
      <title>ブックマークのおっかけ</title>
      <link>http://hail2u.net/blog/internet/tracking-bookmarks.html</link>
      <description>ソーシャル・ブックマークはまだそれなりに機能するが、いまだに追いかけるのが難しい。その中ではてなブックマークのお気に入り機能は出色の出来栄えと言えそうだが、やはりブラウザーであのページを見るのは辛い。かといってRSSリーダーで読むのもなかなか難しいと感じる。HBFavは良いものだが、やはりデスクトップでどうにかしたい。</description>
      <category>Internet</category>
      <guid isPermaLink="true">http://hail2u.net/blog/internet/tracking-bookmarks.html</guid>
      <pubDate>Thu, 15 Oct 2015 10:35:00 +0900</pubDate>
      <content:encoded><![CDATA[
<p>ソーシャル・ブックマークはまだそれなりに機能するが、いまだに追いかけるのが難しい。その中ではてなブックマークのお気に入り機能は出色の出来栄えと言えそうだが、やはりブラウザーであのページを見るのは辛い。かといってRSSリーダーで読むのもなかなか難しいと感じる。<a href="http://hbfav.bloghackers.net/">HBFav</a>は良いものだが、やはりデスクトップでどうにかしたい。</p>

<p>ストック型では色々試した末にはてなブックマークのお気に入りRSSから<a href="https://ifttt.com/email_digest">IFTTTのEmail Digest</a>に貯めて毎日深夜に送っておくという形でしばらく落ち着いた。RSSリーダーでお気に入りフィード読むのは本当に苦行だったが、相当マシな気もする。特に気が向かなかったら読まずにとっておくこと（未読でプレッシャーかかったりしない）も、捨てることもできる。僕は送る時間を夜中の3時にして余裕のある朝にチェックできるようにしているが、みながウェブページを見てブックマークし終わる午後3時くらいも悪くはない（休み明けに大量に来やすいのには注意が必要）。</p>

<p>ただやはりSlackを使っているならこれかなと思う。個人で管理できて、かつクライアントを問わないというのはかなりのメリットだ。個人でドメインを作って#generalに流すだけで良いし、既読位置もわかるのでストック型のようにも利用できる。Slackの提供するFeedインテグレーションを使っても良さそうだが、シンプルにURLだけ流したかったのでIFTTTを挟んで流している。</p>

<figure>
  <a href="http://hail2u.net/images/blog/favorite-bookmarks-in-slack.png"><img alt="IFTTT経由ではてなブックマークのお気に入りフィードを流す場合、リンクが張られたタイトルと投稿者と投稿日時が表示されるだけのシンプルな形でチャンネルに流すことができる" src="http://hail2u.net/images/blog/favorite-bookmarks-in-slack.png"></a>
  <figcaption>Hatena Bookmark on Slack</figcaption>
</figure>

<p>他にGitHub（スターだけ）やDribbble、VimeoなどもRSSリーダーはやめてダラダラとSlackに流し続けるようにしてみたけれど、それはやりすぎだった。少なくともパーソナライズされたものとは非常に相性が良いことがわかったので、うまくチャンネルを分けてミュートしたりすれば良いのではないかと思う。</p>

<hr>

<p>その一方で、もう今やソーシャル・ブックマークという時代ではない感じもあり、このような手段を考えるのも馬鹿々々しいという思いもある。若いウェブデザイナーがはてなブックマークを使っているとも思えないし、その他のソーシャル・ブックマークに至ってはその存在すら知らなそうだ。</p>

<p>本当はそういう人たちのアンテナの先に触れたものが知りたい。きっとそういう人たちもPocketであったり、何かしらの形で読んだウェブページを記録してたりするのだろう。でもそれがRSSのような誰にでもアクセスでき、扱いやすい形で表に出てくることはない。</p>

<hr>

<p>こういう時にウェブは進化してるのか退化してるのかよくわからなくなる。今さらのアプリ化の流れなども含めて、それに違和感を感じることが正しいのかどうかまったく自信が持てない。</p>]]></content:encoded>
    </item>

    <item>
      <title>システム・フォントのショートカット</title>
      <link>http://hail2u.net/blog/webdesign/css-system-font-shortcut.html</link>
      <description>システム・フォントのリフレッシュが各OSで進んでいる。かといって無指定の場合はそれらシステム・フォントが利用されるというわけでもない。あまり長いfont-familyプロパティーを書くのは好きではないので、@font-faceで抽象化したい。それを試すついでに、srcデスクリプターで-apple-systemキーワードが利用できるかどうかの確認もした。</description>
      <category>Web Design</category>
      <guid isPermaLink="true">http://hail2u.net/blog/webdesign/css-system-font-shortcut.html</guid>
      <pubDate>Tue, 13 Oct 2015 10:04:00 +0900</pubDate>
      <content:encoded><![CDATA[
<p>システム・フォントのリフレッシュが各OSで進んでいる。かといって無指定の場合はそれらシステム・フォントが利用されるというわけでもない。あまり長い<code>font-family</code>プロパティーを書くのは好きではないので、<code>@font-face</code>で抽象化したい。それを試すついでに、<code>src</code>デスクリプターで<code>-apple-system</code>キーワードが利用できるかどうかの確認もした。</p>

<p >See Also: <a href="http://hail2u.net/pub/test/641.html">The “System” Font Shortcut</a></p>

<p>ざっと確認する限りはうまく反映されているようだ。こういうものを書いていると<code>system</code>汎用フォントファミリーなどなくてもどうにかなると思うが、同時にこういう形でしかどうにかできないからこそ必要なのかもしれないとも思う。少なくともSan Franciscoによってフォント指定の概念が覆されてしまい、リニアーなスタックでは表現することができなくなったので、必要な方向になっていくのだろう。</p>

<p>懸念だった<code>-apple-system</code>の<code>src</code>デスクリプターでの利用も問題ないようだが、これは今のところOSレベルでエイリアスとして機能しているというだけなのかもしれない。後々標準仕様で汎用フォントファミリーとして<code>system</code>などと定義された場合、<code>src(&quot;system&quot;)</code>とは書くことができないと考えられる。これをそのまま使うのはやめておいた方が無難と感じた。</p>

<p>普通のウェブページにおいてはシステム・フォントはそれほど重要ではない（San Franciscoは例外）が、ウェブ・アプリケーションとなるとその重要性は飛躍的に上がる。そういう点を考えると、CSSレベルでどうにかできる<code>system</code>汎用フォントファミリーのような仕組みがあっても良いのかもしれない。</p>

<hr>

<p>久しぶりにTahomaと書こうとしたせいか、Tahomeになっていた。</p>]]></content:encoded>
    </item>

    <item>
      <title>夢</title>
      <link>http://hail2u.net/blog/misc/dreaming-20151009.html</link>
      <description>父親が帰ってきたので、食事の用意をして一緒に食べる。後片付けをしていると客用の茶碗を出していたことに気付き、「あっ親父死んだよな」と考える。父親に「死んだよね」って聞いてみると、「そうだよーそれで言うことあったんだよ」と軽く言われたところで目が覚める。</description>
      <category>Misc.</category>
      <guid isPermaLink="true">http://hail2u.net/blog/misc/dreaming-20151009.html</guid>
      <pubDate>Mon, 12 Oct 2015 08:49:00 +0900</pubDate>
      <content:encoded><![CDATA[
<p>父親が帰ってきたので、食事の用意をして一緒に食べる。後片付けをしていると客用の茶碗を出していたことに気付き、「あっ親父死んだよな」と考える。父親に「死んだよね」って聞いてみると、「そうだよーそれで言うことあったんだよ」と軽く言われたところで目が覚める。</p>

<p>気づき方がちょっと凝ってて、ビックリした。あと夢なので冷静だった。</p>]]></content:encoded>
    </item>

    <item>
      <title>ベースライン</title>
      <link>http://hail2u.net/blog/webdesign/baseline.html</link>
      <description>復帰してからこっちウェブページから色々削除していた。Facebook向けのOGPやTwitter Cards用のmeta要素、ほぼGoogle向けのMicrodataなどを削除して、HTMLでは必要最小限のところまで絞った。CSSでは主にNormalize.cssを削除する作業と、SCSSでの変数のローカル化なので、結果はほとんど変わっていない。JavaScriptは元々それほど使っていないので変わっていない。この状態をベースラインにして、何をどう積み上げるか、だ。</description>
      <category>Web Design</category>
      <guid isPermaLink="true">http://hail2u.net/blog/webdesign/baseline.html</guid>
      <pubDate>Sun, 11 Oct 2015 09:07:00 +0900</pubDate>
      <content:encoded><![CDATA[
<p>復帰してからこっちウェブページから色々削除していた。Facebook向けのOGPやTwitter Cards用の<code>meta</code>要素、ほぼGoogle向けのMicrodataなどを削除して、HTMLでは必要最小限のところまで絞った。CSSでは主にNormalize.cssを削除する作業と、SCSSでの変数のローカル化なので、結果はほとんど変わっていない。JavaScriptは元々それほど使っていないので変わっていない。この状態をベースラインにして、何をどう積み上げるか、だ。</p>

<p>FacebookのOGPやTwitter Cardsはいらないかなと強く感じる（同じことを何度も書きたくない）が、逆にMicrodataは追加したい気持ちが強まった。しかしそれなら<a href="http://microformats.org/wiki/h-entry">h-entry</a>の方が良いなという気もし、難しいところだ。Microdata自体はオープンな標準仕様ではあるものの、併せて利用することになるShcema.orgのボキャブラリーが事実上Googleのものなので、FacebookのOGPとTwitter Cardsとなんら変わりはない。でも今さらMicroformatsに戻るのかというと抵抗はある上、hAtomではなくh-entryにしてしまうとサポートされている環境が大きく減ることにもなる。</p>

<p>CSSでは必要なノーマリゼーションのコードをどう取り込むかを一から考え直したい。</p>

<p>今年中にHTTPSにしよう、と決めた。どうやら2000円/年くらいでHTTPSを安定して運用できそうな状況になりつつあるようで、<a href="https://tools.ietf.org/html/rfc6797">HTTP Strict Transport Security</a>を利用して移行させたとしても、取り返しのつかない事態におちいるということはなさそうだ。まずはCloudFlareを使い、半年以内に避難場所を確保するという形にしたい。</p>

<hr>

<p>ウェブフォントも削除してるが、これは一時的なもの（San Franciscoファミリーの実験のため）だ。が、久々にウェブフォントなしにするとやはり快適で、個人のウェブサイトのようなキャッシュ効果が低いページでウェブフォントを使うにはかなりの工夫が必要そうだと改めて感じた。ローカルストレージに突っ込む手法は大手よりも小規模なウェブサイトでこそ威力を発揮するのかもしれない。</p>]]></content:encoded>
    </item>

  </channel>
</rss>
