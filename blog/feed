<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0"
  xml:lang="ja"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/"
  xmlns:creativeCommons="http://backend.userland.com/creativeCommonsRssModule">
  <channel>
    <description>ウェブ開発に関する話題が中心でしたが、もはやそれに限らず備忘録に近いものです。</description>
    <link>https://hail2u.net/blog/</link>
    <managingEditor>hail2u@gmail.com (Kyo Nagashima)</managingEditor>
    <title>雑多な記録 - Hail2u</title>
    <atom:link href="https://hail2u.net/blog/feed" rel="self" type="application/rss+xml"/>
    <creativeCommons:license>https://creativecommons.org/licenses/by/4.0/</creativeCommons:license>

      <item>
        <description><![CDATA[少しだけ興味があったものの見に行くほどではないかなと思っていた映画、教皇選挙だ。教皇が死んだので、見たい気持ちが高まる。地元で週に3回くらい上映しており、安い水曜日に見に行く。みんな考えることは同じようで、完全に席が埋まっている。内容については割愛するが、この記事のタイトルのような見ごたえはある。宮殿外の映像はほぼないと思う。]]></description>
        <guid>https://hail2u.net/blog/2025-05-09.html</guid>
        <link>https://hail2u.net/blog/2025-05-09.html</link>
        <pubDate>Fri, 9 May 2025 11:16:05 +0900</pubDate>
        <title><![CDATA[究極ガイド・2時間でまわるバチカン宮殿、的な映画]]></title>
        <content:encoded><![CDATA[<p>少しだけ興味があったものの見に行くほどではないかなと思っていた映画、<a href="https://cclv-movie.jp/">教皇選挙</a>だ。教皇が死んだので、見たい気持ちが高まる。地元で週に3回くらい上映しており、安い水曜日に見に行く。みんな考えることは同じようで、完全に席が埋まっている。内容については割愛するが、この記事のタイトルのような見ごたえはある。宮殿外の映像はほぼないと思う。</p>

<p>レイフ・ファインズ(姓がハ行だ)はかなりの好演だ。彼の演じる主人公の抱える悩みについては深く語られない。その語られなさにより、鑑賞者自身が抱える悩みを通して鑑賞することになるのだと思う。つまり見終わった後に鑑賞者自身がコンクラーヴェの過程や結末を消化するわけだ。なかなか消化できそうもない予感がある。</p>]]></content:encoded>
      </item>
      <item>
        <description><![CDATA[ゴールデン・ウィークはジュール・ヴェルヌを読み返していた。オーブリー・ビアズリーの展覧会を見に行った流れで、アール・ヌーヴォー関連の本を眺めていると、ヴェルヌについてもよく出てくる(一番多いのはウィリアム・ブレイクか)。子供の時に読んで以来だ。]]></description>
        <guid>https://hail2u.net/blog/2025-05-08.html</guid>
        <link>https://hail2u.net/blog/2025-05-08.html</link>
        <pubDate>Thu, 8 May 2025 07:11:04 +0900</pubDate>
        <title><![CDATA[ジュール・ヴェルヌ・ウィーク]]></title>
        <content:encoded><![CDATA[<p>ゴールデン・ウィークはジュール・ヴェルヌを読み返していた。<a href="https://hail2u.net/blog/beardsley-a-singular-prodigy-2025-02-28.html">オーブリー・ビアズリーの展覧会</a>を見に行った流れで、アール・ヌーヴォー関連の本を眺めていると、ヴェルヌについてもよく出てくる(一番多いのはウィリアム・ブレイクか)。子供の時に読んで以来だ。</p>

<p>地底旅行、海底二万里、八十日間世界一周、地軸変更計画、と読んでいった。十五少年漂流記は6年ほど前に読んだので、今回は読まない。読んだことがあるのでサクサク読めるし、サクサク読んで楽しい本なので雑に読んでしまう。挿絵を集めた画集がないものか。</p>]]></content:encoded>
      </item>
      <item>
        <description><![CDATA[color-mix()関数をよく使うようになりつつある。ウェブ・アプリ・オア・ダイみたいな生息地なので、ネイティブ・アプリとの相互運用性に主眼を置いたデザイン・トークンが不要になり、思う存分CSSに寄せられる。カラー・パレットの管理もそうで、color-mix()関数はバリエーションを作る時に役に立つ。割合で混ぜるだけだが、仕様をしっかりと読んでおかないと思ってもみない結果になることがある。]]></description>
        <guid>https://hail2u.net/blog/percentage-in-color-mix-function.html</guid>
        <link>https://hail2u.net/blog/percentage-in-color-mix-function.html</link>
        <pubDate>Wed, 7 May 2025 13:40:55 +0900</pubDate>
        <title><![CDATA[color-mix()関数での割合]]></title>
        <content:encoded><![CDATA[<p><code>color-mix()</code>関数をよく使うようになりつつある。ウェブ・アプリ・オア・ダイみたいな生息地なので、ネイティブ・アプリとの相互運用性に主眼を置いたデザイン・トークンが不要になり、思う存分CSSに寄せられる。カラー・パレットの管理もそうで、<code>color-mix()</code>関数はバリエーションを作る時に役に立つ。割合で混ぜるだけだが、仕様をしっかりと読んでおかないと思ってもみない結果になることがある。</p>

<p><code>color-mix()</code>関数は、</p>

<ul>
  <li>指定した色空間で</li>
  <li>2つの色を</li>
  <li>指定した割合で</li>
</ul>

<p>混ぜる、という関数だ。例えば、HSL色空間で、<code>red</code>と<code>blue</code>を、25%と75%ずつ混ぜてみる。<code>red</code>と<code>blue</code>は、共に彩度100%、輝度50%なので、色相だけが混ざる。以下、コード例で<code>color-mix()</code>関数を使って実行結果を表示しているが、フィード・リーダーなどでは見えないかもしれないため、別に<a href="https://hail2u.net/pub/test/714.html">テスト・ページ</a>も作っておいた。</p>

<pre><code class="language-css">.test1 {
  background-color: <span style="background-color: color-mix(in hsl, red 25%, blue 75%); color: white">color-mix(in hsl, red 25%, blue 75%)</span>;
}</code></pre>

<p><code>hsl(270deg 100% 50%)</code>、つまりブドウ色になる。片方の色で割合を省略した場合、100%から引いた値に自動的に決まるので、以下のようにも書ける。</p>

<pre><code class="language-css">.test2 {
  background-color: <span style="background-color: color-mix(in hsl, red 25%, blue); color: white">color-mix(in hsl, red 25%, blue)</span>;
}

.test3 {
  background-color: <span style="background-color: color-mix(in hsl, red, blue 75%); color: white">color-mix(in hsl, red, blue 75%)</span>;
}</code></pre>

<p>どちらも同じくブドウ色だ。割合の合計が100%を超えると、100%になるように調整されるので、以下のようにも書ける。</p>

<pre><code class="language-css">.test4 {
  background-color: <span style="background-color: color-mix(in hsl, red 30%, blue 90%); color: white">color-mix(in hsl, red 30%, blue 90%)</span>;
}</code></pre>

<p>これも同じくブドウ色だ。ただし、どちらかで100%を超える割合を指定すると無効な値になるので、以下のようには<em>書けない</em>。</p>

<pre><code class="language-css">.test5 {
  background-color: <span style="background-color: color-mix(in hsl, red 50%, blue 150%); color: black">color-mix(in hsl, red 50%, blue 150%)</span>;
}</code></pre>

<p>無効な値になり、プロパティーは無視される。割合を<code>calc()</code>関数で計算する場合に超えやすいが、安全のため<code>min()</code>関数で括るという対処方法はある。問題は割合の合計が100%に満たない場合だ。以下のように書いてみると、わかりやすいだろう。</p>

<pre><code class="language-css">.test6 {
  background-color: <span style="background-color: color-mix(in hsl, red 10%, blue 30%); color: black">color-mix(in hsl, red 10%, blue 30%)</span>;
}</code></pre>

<p>かなり薄いブドウ色になってしまう。正確にはブドウ色の透過色になっていることが開発者ツールで確認できるだろう。合計が100%に満たない場合、その合計を<em>不透明度として保持した上</em>で、合計が100%になるように調整される。つまりこの場合は<code>10% + 30% = 40%</code>が不透明度になり、結果<code>hsl(270deg 100% 50% / 40%)</code>となるわけだ。</p>

<pre><code class="language-css">.test7 {
  background-color: <span style="background-color: hsl(from color-mix(in hsl, red, blue 75%) h s l / 40%); color: black">hsl(from color-mix(in hsl, red, blue 75%) h s l / 40%);</span>
}</code></pre>

<p>不透明度もまとめて生成可能という6番目の書き方は役に立つ可能性があるが、不透明度自体は意識せざるを得ない。それならば、このように明示的に入れ子にした方がわかりやすいのではないかと思う。</p>

<p><code>color-mix()</code>関数の書き方を総括すると、どちらかで割合を指定するだけで十分ということがわかる。むしろ片方は書かない方が、うっかり間違えないので無難だろう。また、2番目の色に割合を指定すると、「色Aに色Bをn%の割合で混ぜる」と解釈でき、読みやすいのではないかと思う。いずれにしても片方だけに書くという書き方に統一することが望ましいと考えている。</p>

<hr>

<p>色の混ざり具合そのものは色空間の指定による影響が大きい。使い始めた当初はその事ばかりを意識していたが、すぐに割合の値でも大きな違いが表れることに気付く。同じような色を様々な形で作り出す修行が欠かせない。</p>]]></content:encoded>
      </item>
      <item>
        <description><![CDATA[小ぶりのマグ・カップを探したが、なかなか見つからない。諦めてソーサー付きのカップで探し、パン皿として欲しかった柄のカップ・アンド・ソーサーにする。イッタラというかアラビアというかのマイニオ・サラストゥスの黒だ。この柄は出た当初からかなり好きで、19cmの皿を買おうか5年くらい迷っている。割高だが、公式オンライン・ストアで定価の5500円で買う。]]></description>
        <guid>https://hail2u.net/blog/arabia-mainio-sarastus-cup-and-saucer.html</guid>
        <link>https://hail2u.net/blog/arabia-mainio-sarastus-cup-and-saucer.html</link>
        <pubDate>Fri, 2 May 2025 12:38:25 +0900</pubDate>
        <title><![CDATA[アラビアのマイニオ・サラストゥスのカップ(・アンド・ソーサー)]]></title>
        <content:encoded><![CDATA[<aside>
<figure>
<a href="https://www.amazon.co.jp/exec/obidos/ASIN/B0BJ1HQYH8/hail2unet-22"><img alt="ARABIA 【正規輸入品】 アラビア マイニオ サラストゥス カップ&amp;ソーサー 170ml 1068044" height="1440" src="https://hail2u.net/img/blog/arabia-mainio-sarastus-cup-and-saucer.avif" width="2560"></a>
</figure>
</aside>

<p>小ぶりのマグ・カップを探したが、なかなか見つからない。諦めてソーサー付きのカップで探し、パン皿として欲しかった柄のカップ・アンド・ソーサーにする。イッタラというかアラビアというかの<a href="https://www.amazon.co.jp/exec/obidos/ASIN/B0BJ1HQYH8/hail2unet-22">マイニオ・サラストゥスの黒</a>だ。この柄は出た当初からかなり好きで、19cmの皿を買おうか5年くらい迷っている。割高だが、公式オンライン・ストアで定価の5500円で買う。</p>

<p>直径11.5cmくらいと小さめのソーサー付きだが、ソーサーは使わず、カップ単体で使っている。容量は170mLとなっているものの、満水で190mL前後と、毎朝淹れる175mLのコーヒーに、ギリギリよりのピッタリだ。重くもなく、軽くもなく、座りも良いので、かなり使い易い。柄は皿の方が映える気もする。</p>

<p>ソーサーにはカップが嵌る受けがないので、普通に小さめの皿としてプレゼントする。少し前に小皿を割ってしまったお詫びだ。最近は受けがないソーサーがそこそこあるようだ。使い回せるからだろうか。</p>]]></content:encoded>
      </item>
      <item>
        <description><![CDATA[耳鼻科に行く。ノイズ・キャンセリング・イヤフォンを長時間使うと激しい頭痛が起きるという症状の相談だ。奥の方に荒れている部分があり、そこが刺激を受けているのではないかという話になる。原因は乾燥と耳かきらしい。]]></description>
        <guid>https://hail2u.net/blog/2025-05-01.html</guid>
        <link>https://hail2u.net/blog/2025-05-01.html</link>
        <pubDate>Thu, 1 May 2025 12:09:48 +0900</pubDate>
        <title><![CDATA[耳由来による頭痛の治療]]></title>
        <content:encoded><![CDATA[<p>耳鼻科に行く。ノイズ・キャンセリング・イヤフォンを長時間使うと激しい頭痛が起きるという症状の相談だ。奥の方に荒れている部分があり、そこが刺激を受けているのではないかという話になる。原因は乾燥と耳かきらしい。</p>

<p>通常は、こうなる前に聞こえ方がおかしくなったりするらしい。あまり聞こえない方の耳で、聞こえ方の悪化に気づけなかったのではないか、とも言っていた。5日間飲み薬を飲んだ後、イヤフォンを試すとまったく平気だった。まずは治ったようでうれしい。耳かきは風呂上がりに細めの綿棒を使いましょうと言われたので、そうすることにする。再発しないと良いな。</p>]]></content:encoded>
      </item>
      <item>
        <description><![CDATA[10年以上待ち続けていたtext-autospaceプロパティーの最適な値を探っている。実装がSafari 18.4にしかないので、比較的安全に遊べる。後方互換性と巷の文書を考慮した結果、意外な複雑さがある。]]></description>
        <guid>https://hail2u.net/blog/best-value-for-text-autospace-property.html</guid>
        <link>https://hail2u.net/blog/best-value-for-text-autospace-property.html</link>
        <pubDate>Wed, 30 Apr 2025 17:51:32 +0900</pubDate>
        <title><![CDATA[text-autospaceプロパティーの最適値]]></title>
        <content:encoded><![CDATA[<p>10年以上待ち続けていた<code>text-autospace</code>プロパティーの最適な値を探っている。実装がSafari 18.4にしかないので、比較的安全に遊べる。後方互換性と巷の文書を考慮した結果、意外な複雑さがある。</p>

<section>
<h2>現状の仕様</h2>

<p><a href="https://www.w3.org/TR/2024/WD-css-text-4-20240529/">2024年5月29日のWD</a>では以下のような値が取れるようになっている。</p>

<pre>normal |
no-autospace |
[ ideograph-alpha || ideograph-numeric || punctuation ] || [ insert | replace ] |
auto</pre>

<p><code>auto</code>にすると環境依存で最適化されるようだが、単に<code>no-autospace</code>になりそうだ。つまり<code>auto</code>と<code>no-autospace</code>は無指定と考えて良い。実際には<code>normal</code>と複数指定を使うことになるだろう。</p>

<p><code>normal</code>は<code>ideograph-alpha ideograph-numeric</code>と見做され、英数字との間に空白が挿入される。<code>punctuation</code>は半角記号との間に<em>非改行空白</em>が挿入される。<code>ideograph-*</code>はそれぞれアルファベットのみと数字のみとの間に空白が挿入される</p>

<p>挿入の制御も可能で、<code>replace</code>を追加しておくと、既に半角空白がある場合はそれを置き換えてくれる。<code>text-autospace</code>プロパティーの挿入する空白は<a href="https://www.w3.org/TR/2024/WD-css-text-4-20240529/#inter-script-spacing">1/8空白</a>とされているので、半角空白よりも印刷媒体に近くなり、可読性が向上することが期待できる。<code>insert</code>は既定の挙動で、指定しなくても良い。</p>
</section>

<section>
<h2>Safari 18.4での実装</h2>

<p><a href="https://caniuse.com/mdn-css_properties_text-autospace">Can I Use</a>では、実験的と注意書きはあるものの、実装済みとなっている。確かに<code>normal</code>や複数指定の仕組み自体は実装されているようだ。しかし、<code>punctuation</code>や<code>replace</code>は実装されていない。そのためこれらの値を指定してしまうと、自動挿入されなくなる。完全実装には遠い。</p>

<p>また、丁度要素の終わりと空白の自動挿入場所が重なると、挿入されなかったりすることもあるようだ。再現不能な挿入失敗もあったり、なかなか挙動不審だ。しかし、概ね期待通りに動くようで、安心して使えると考えて良いだろう。</p>
</section>

<hr>

<p>つまり現状では<code>normal</code>くらいしかやることがないように思える。問題はどこでどう指定するか、になる。雑にルート要素で指定すると、挿入して欲しくなさそうな場所でも挿入されてしまう。しかし、個々の要素それぞれで指定するのは面倒臭い。色々な要素で有効と向こうを切り替えながら見ていると、最低でも無効にするべき要素が分かってきた。</p>

<pre><code class="language-css">:root {
  text-autospace: normal;
}

:is(pre, time, input, textarea) {
  text-autospace: no-autospace;
}</code></pre>

<p><code>pre</code>要素では、等幅フォントでずれるようになるからだ。<code>time</code>要素では、紙の本などで「<time datetime="2025">2025年</time>」のような日付表記には空白が入らないからだ。<code>input</code>要素や<code>textarea</code>要素では、入力中に自動挿入が入ると挙動不審になる恐れがあるからだ。</p>

<hr>

<p>実装が進むと、また挙動が変わるかもしれない。最終的には<code>ideograph-alpha ideograph-numeric punctuation replace</code>で落ち着くような気もするが、良い名前のショートカットも作られるだろうし、要素ごとに違う既定値が与えられるかもしれない。理想的な未来では、<code>auto</code>がそうなるような気もする。</p>]]></content:encoded>
      </item>
      <item>
        <description><![CDATA[タケノコが豊作らしく、なかなか安い。500円から600円くらいで買えるため、グラグラ茹でて貰い、モリモリ食べている。「安かった」だし、「食べていた」のようで、先週末辺りから見かけなくなってきている。タケノコの横では米ぬかが売っていることが多いが、今年は80円などとなっていることもあり、昨年の倍くらいで驚く。米価の影響かと思ってしまうが、単なるぼったくりに感じる。]]></description>
        <guid>https://hail2u.net/blog/2025-04-28.html</guid>
        <link>https://hail2u.net/blog/2025-04-28.html</link>
        <pubDate>Mon, 28 Apr 2025 11:18:58 +0900</pubDate>
        <title><![CDATA[タケノコ、用の米ぬか]]></title>
        <content:encoded><![CDATA[<p>タケノコが豊作らしく、なかなか安い。500円から600円くらいで買えるため、グラグラ茹でて貰い、モリモリ食べている。「安かった」だし、「食べていた」のようで、先週末辺りから見かけなくなってきている。タケノコの横では米ぬかが売っていることが多いが、今年は80円などとなっていることもあり、昨年の倍くらいで驚く。米価の影響かと思ってしまうが、単なるぼったくりに感じる。</p>

<p>タダで貰えていた時は米ぬかを使っていたようだが、今はとぎ汁を混ぜて茹でているらしい。特に灰汁が抜けないということもなく、美味しく茹っている。米ぬかオイルの製品とかも値上がりするのだろうか。あまり意識していなかったが、柿の種とかの値上げもありうるのか。</p>]]></content:encoded>
      </item>
      <item>
        <description><![CDATA[行ったことがない羽田空港の国際線のターミナルを見に行く。ついでにフラフラする。とにかく人とキャリーだらけだ。]]></description>
        <guid>https://hail2u.net/blog/2025-04-25.html</guid>
        <link>https://hail2u.net/blog/2025-04-25.html</link>
        <pubDate>Fri, 25 Apr 2025 10:15:59 +0900</pubDate>
        <title><![CDATA[羽田空港第3ターミナル散歩]]></title>
        <content:encoded><![CDATA[<figure>
<img alt="ターミナルの屋根は、大きな船の帆が風を張らんでいるようなゆったりとした量感を持っている。" height="1440" src="https://hail2u.net/img/blog/haneda-airport-terminal-3.avif" width="2560">
</figure>

<p>行ったことがない羽田空港の国際線のターミナルを見に行く。ついでにフラフラする。とにかく人とキャリーだらけだ。</p>

<p>京急川崎駅で乗り換える。川崎と空港の間でも乗り降りが激しい。夕方でそのあたりのホテルに泊まる人たちが降りたりしているのだろうか。第3ターミナル駅はさすがにホームが広くて歩きやすい。一気に2階まで行けるエレベーターで上り、ザ・ロイヤル・パーク・ホテル東京羽田にも行く。ちょっとの距離だが、人は多いし、行列を避けながら歩くため、意外に遠い。</p>

<p>エアポート・ガーデンまで行くと空いている。食べ物屋はこちらの方が多いようなそうでもないような、微妙な感じだ。コクヨの店はちょっと楽しい。裁断時の端材で作ったという、メッシュのトートバッグはちょっと欲しくなる。食べ物屋はちょうど昼と夜の切り替え時間だったらしく、あまり店が開いていない。端の方にあった親子丼の店で、焼き鳥付きの御膳を食べる。ちょっと甘めでトロトロと、好みとは違うがなかなか美味しい。焼き鳥もそこそこ美味しい。ただ売りの名古屋コーチンにすれば良かったかもしれない。</p>

<p>夜の横浜をぶらつきつつ家に帰る。夜の横浜はすごい人だ。止みかけていたとはいえ、雨だったということもあるのかもしれない。最寄駅に着くとまた大雨で、少し立ち読みしつつ待つが止む気配がない。諦めてバシャバシャ帰る。</p>]]></content:encoded>
      </item>
      <item>
        <description><![CDATA[なんとなく集め始めてしまったワインコルクが81個になる。大きなガラス・ボウルにでも投げ込めば、オブジェっぽくなりそうな数だ。キリの良い100個まで集め、捨てるかどうか考えたい。]]></description>
        <guid>https://hail2u.net/blog/2025-04-24.html</guid>
        <link>https://hail2u.net/blog/2025-04-24.html</link>
        <pubDate>Thu, 24 Apr 2025 12:27:56 +0900</pubDate>
        <title><![CDATA[ワインコルク集め]]></title>
        <content:encoded><![CDATA[<figure>
<img alt="様々な焼き印を施されたワインコルクがある。中には黒く染められたコルクも見える。" height="1440" src="https://hail2u.net/img/blog/wine-corks.avif" width="2560">
</figure>

<p>なんとなく集め始めてしまったワインコルクが81個になる。大きなガラス・ボウルにでも投げ込めば、オブジェっぽくなりそうな数だ。キリの良い100個まで集め、捨てるかどうか考えたい。</p>

<p>割と収集癖がある。自覚的ではあるので、集め始めそうになると、つまり5つくらい集まってしまったら捨てるようにしている。収集癖を満たす手段は本や、マンガ、ポストカード、洋服に付いている下げ札くらいで十分だ。</p>]]></content:encoded>
      </item>
      <item>
        <description><![CDATA[感覚を慣れさせるため、このウェブサイトの色をoklch()関数に更新する。hsl()関数からの変換は色々な方法があるが、今だとブラウザーを使うと良いと思う。ただし環境によって変換結果が変わるので、。何度かやっているとなんとなく感覚が掴めてくるだろう。]]></description>
        <guid>https://hail2u.net/blog/from-hsl-to-oklch.html</guid>
        <link>https://hail2u.net/blog/from-hsl-to-oklch.html</link>
        <pubDate>Wed, 23 Apr 2025 12:25:53 +0900</pubDate>
        <title><![CDATA[hsl()からoklch()へ]]></title>
        <content:encoded><![CDATA[<p>感覚を慣れさせるため、このウェブサイトの色を<code>oklch()</code>関数に更新する。<code>hsl()</code>関数からの変換は色々な方法があるが、今だとブラウザーを使うと良いと思う。ただし環境によって変換結果が変わるので、。何度かやっているとなんとなく感覚が掴めてくるだろう。</p>

<pre><code class="language-css">.test {
  color: oklch(from hsl(48 48% 93%) l c h);
  /**
    Calculated Value:
    Firefox 137.0.2: oklch(0.960961 0.0184797 95.2514)
    Chrome 135.0.7049.96: oklch(0.960886 0.0184952 95.102)
    Safari TP 213: oklch(0.960961 0.01848 95.251404)
  */
}</code></pre>

<p>適当な要素でこのように<a href="https://www.w3.org/TR/css-color-5/#relative-colors">相対指定</a>を利用すると、開発者ツールの計算済みでは<code>oklch()</code>関数の絶対指定に変換される。相対指定はColor Module Level 5で定義されており、Firefox ESR 128にもギリギリ入ったので、かなり安全に利用できる。<code>currentcolor</code>などでうまく動かないバージョンが残っていることは頭に入れて置きたい。</p>

<hr>

<p><code>oklch</code>関数の相対指定では、区切りにカンマが不要だ。最近頓に増えてきたCSS関数でのカンマの要不要を特徴付けていて、メンタル・モデルの更新に役立つだろう。例えば<code>color-mix()</code>関数ではカンマが必要だということを思い合わせると、理解しやすいかもしれない。</p>]]></content:encoded>
      </item>
  </channel>
</rss>
